<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.vr.dao.VrVisitDtlDao">
    
	<sql id="vrVisitDtlColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.visit_no AS "visitNo",
		a.line_no AS "lineNo",
		a.if_visit AS "ifVisit",
		a.business_opp_no AS "businessOppNo",
		a.customer_name AS "customerName",
		a.purpose AS "purpose",
		a.if_local AS "ifLocal",
		a.address AS "address",
		a.exp_date_from AS "expDateFrom",
		a.exp_date_to AS "expDateTo",
		a.act_date_from AS "actDateFrom",
		a.act_date_to AS "actDateTo",
		a.new_remarks AS "newRemarks",
		a.leader_opinion AS "leaderOpinion",
		a.director_opinion AS "directorOpinion"
	</sql>
	
	<sql id="vrVisitDtlJoins">
	</sql>
    
	<select id="get" resultType="VrVisitDtl">
		SELECT 
			<include refid="vrVisitDtlColumns"/>
		FROM vr_visit_dtl a
		<include refid="vrVisitDtlJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="getObjectByKey" resultType="VrVisitDtl">
		SELECT 
			<include refid="vrVisitDtlColumns"/>
		FROM vr_visit_dtl a
		<include refid="vrVisitDtlJoins"/>
		WHERE a.visit_no = #{visitNo}
		AND a.line_no = #{lineNo}
	</select>
	
	<select id="findList" resultType="VrVisitDtl">
		SELECT h.id head_row_id,h.workflow_status,h.workflow_status2,
		IF(h.workflow_status = 50, '已审核' ,'申请中' ) as workflowStatusName,
		if(h.workflow_status2 is null,'-',if(h.workflow_status2 = 50,'已审核','申请中' )) as workflowStatus2Name,
		c.customer_ch_name,u.name createName,if(a.if_visit=1,"是","否") as ifVisitName,
			<include refid="vrVisitDtlColumns"/>
		FROM vr_visit_dtl a inner join vr_visit h
		on a.visit_no = h.visit_no
		and a.del_flag = #{DEL_FLAG_NORMAL}
		inner join cm_customer_info c
		on a.customer_name = c.customer_id
		inner join sys_user u
		on a.create_by = u.id
		<where> h.del_flag = #{DEL_FLAG_NORMAL}
			<if test="workflowStatus != null and workflowStatus != ''">
				<if test="workflowStatus == 50">
					and h.workflow_status = 50
				</if>
				<if test="workflowStatus != 50">
					and h.workflow_status != 50
				</if>
			</if>
			<if test="workflowStatus2 != null and workflowStatus2 != ''">
				<if test="workflowStatus2 == 50">
					and h.workflow_status2 = 50
				</if>
				<if test="workflowStatus2 != 50">
					and h.workflow_status2 != 50
				</if>
			</if>
			<if test="expDateFrom != null and expDateFrom != ''">
				and IF(a.act_date_from is null, a.exp_date_from &gt;= #{expDateFrom} ,a.act_date_from &gt;= #{expDateFrom} ) 
			</if>
			<if test="expDateTo != null and expDateTo != ''">
				and IF(a.act_date_from is null, a.exp_date_from &lt;= #{expDateTo} ,a.act_date_from &lt;= #{expDateTo} ) 
			</if>
			<if test="responsiblePersonId != null and responsiblePersonId != ''">
				and h.responsible_person_id = #{responsiblePersonId}
			</if>
			<if test="customerName != null and customerName != ''">
				and c.customer_id = #{customerName}
			</if>
			<if test="sqlMap !=null and sqlMap.dataScope != null">
				and h.create_by in ${sqlMap.dataScope}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.exp_date_from DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="VrVisitDtl">
		SELECT 
			<include refid="vrVisitDtlColumns"/>
		FROM vr_visit_dtl a
		<include refid="vrVisitDtlJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllListById" resultType="VrVisitDtl">
		SELECT c.customer_ch_name,
			<include refid="vrVisitDtlColumns"/>
		FROM vr_visit_dtl a left join cm_customer_info c
		on a.customer_name = c.customer_id
		
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.visit_no = #{visitNo}
		</where>
		ORDER BY a.line_no		
	</select>
	
	<select id="findAllParentList" resultType="VrVisitDtl">
		SELECT h.workflow_status,h.workflow_status2,
			<include refid="vrVisitDtlColumns"/>
		FROM vr_visit_dtl a,vr_visit h
		<include refid="vrVisitDtlJoins"/>
		<where>
			a.visit_no = h.visit_no
			and a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO vr_visit_dtl(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			visit_no,
			line_no,
			if_visit,
			business_opp_no,
			customer_name,
			purpose,
			if_local,
			address,
			exp_date_from,
			exp_date_to,
			act_date_from,
			act_date_to,
			new_remarks,
			leader_opinion,
			director_opinion
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{visitNo},
			#{lineNo},
			#{ifVisit},
			#{businessOppNo},
			#{customerName},
			#{purpose},
			#{ifLocal},
			#{address},
			#{expDateFrom},
			#{expDateTo},
			#{actDateFrom},
			#{actDateTo},
			#{newRemarks},
			#{leaderOpinion},
			#{directorOpinion}
		)
	</insert>
	
	<update id="update">
		UPDATE vr_visit_dtl SET 	
			proc_ins_id = #{procInsId},
			visit_no = #{visitNo},
			line_no = #{lineNo},
			<if test="ifVisit != null and ifVisit != ''">
			if_visit = #{ifVisit},
			</if>
			business_opp_no = #{businessOppNo},
			<if test="customerName != null and customerName != ''">
			customer_name = #{customerName},
			</if>
			purpose = #{purpose},
			<if test="ifLocal != null and ifLocal != ''">
			if_local = #{ifLocal},
			</if>
			address = #{address},
			exp_date_from = #{expDateFrom},
			exp_date_to = #{expDateTo},
			act_date_from = #{actDateFrom},
			act_date_to = #{actDateTo},
			new_remarks = #{newRemarks},
			leader_opinion = #{leaderOpinion},
			director_opinion = #{directorOpinion},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE vr_visit_dtl SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<update id="deleteById">
		delete from vr_visit_dtl
		WHERE id = #{id}
	</update>
	
	<update id="deleteByVisitNo">
		delete from vr_visit_dtl
		WHERE visit_no = #{visitNo}
	</update>
	
</mapper>
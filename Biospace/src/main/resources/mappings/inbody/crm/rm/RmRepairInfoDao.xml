<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.rm.dao.RmRepairInfoDao">
    
	<sql id="rmRepairInfoColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.repair_no AS "repairNo",
		a.repair_type AS "repairType",
		a.sn_no AS "snNo",
		a.ask_repair_date AS "askRepairDate",
		a.repair_way AS "repairWay",
		a.repair_method AS "repairMethod",
		a.repair_status AS "repairStatus",
		a.status_remarks AS "statusRemarks",
		a.responsible_person_id AS "responsiblePersonId",
		a.fault_type AS "faultType",
		a.fault_type2 AS "faultType2",
		a.contacts_name AS "contactsName",
		a.telephone AS "telephone",
		a.repair_cus_name AS "repairCusName",
		a.address AS "address",
		a.issue_describe AS "issueDescribe",
		a.issue_detail AS "issueDetail",
		a.processing_content AS "processingContent",
		a.consult_type AS "consultType",
		a.if_prototype AS "ifPrototype",
		a.prototype_sn_no AS "prototypeSnNo",
		a.prototype_date_from AS "prototypeDateFrom",
		a.prototype_date_to AS "prototypeDateTo",
		a.maintenance_date_from AS "maintenanceDateFrom",
		a.maintenance_date_to AS "maintenanceDateTo",
		a.process_date AS "processDate",
		a.new_remarks AS "newRemarks"
	</sql>
	
	<sql id="rmRepairInfoJoins">
	</sql>
    
	<select id="get" resultType="RmRepairInfo">
		SELECT 
			<include refid="rmRepairInfoColumns"/>
		FROM rm_repair_info a
		<include refid="rmRepairInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="RmRepairInfo">
		SELECT 
			<include refid="rmRepairInfoColumns"/>
		FROM rm_repair_info a
		<include refid="rmRepairInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="RmRepairInfo">
		SELECT 
			<include refid="rmRepairInfoColumns"/>
		FROM rm_repair_info a
		<include refid="rmRepairInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO rm_repair_info(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			repair_no,
			repair_type,
			sn_no,
			ask_repair_date,
			repair_way,
			repair_method,
			repair_status,
			status_remarks,
			responsible_person_id,
			fault_type,
			fault_type2,
			contacts_name,
			telephone,
			repair_cus_name,
			address,
			issue_describe,
			issue_detail,
			processing_content,
			consult_type,
			if_prototype,
			prototype_sn_no,
			prototype_date_from,
			prototype_date_to,
			maintenance_date_from,
			maintenance_date_to,
			process_date,
			new_remarks
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{repairNo},
			#{repairType},
			#{snNo},
			#{askRepairDate},
			#{repairWay},
			#{repairMethod},
			#{repairStatus},
			#{statusRemarks},
			#{responsiblePersonId},
			#{faultType},
			#{faultType2},
			#{contactsName},
			#{telephone},
			#{repairCusName},
			#{address},
			#{issueDescribe},
			#{issueDetail},
			#{processingContent},
			#{consultType},
			#{ifPrototype},
			#{prototypeSnNo},
			#{prototypeDateFrom},
			#{prototypeDateTo},
			#{maintenanceDateFrom},
			#{maintenanceDateTo},
			#{processDate},
			#{newRemarks}
		)
	</insert>
	
	<update id="update">
		UPDATE rm_repair_info SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			repair_no = #{repairNo},
			repair_type = #{repairType},
			sn_no = #{snNo},
			ask_repair_date = #{askRepairDate},
			repair_way = #{repairWay},
			repair_method = #{repairMethod},
			repair_status = #{repairStatus},
			status_remarks = #{statusRemarks},
			responsible_person_id = #{responsiblePersonId},
			fault_type = #{faultType},
			fault_type2 = #{faultType2},
			contacts_name = #{contactsName},
			telephone = #{telephone},
			repair_cus_name = #{repairCusName},
			address = #{address},
			issue_describe = #{issueDescribe},
			issue_detail = #{issueDetail},
			processing_content = #{processingContent},
			consult_type = #{consultType},
			if_prototype = #{ifPrototype},
			prototype_sn_no = #{prototypeSnNo},
			prototype_date_from = #{prototypeDateFrom},
			prototype_date_to = #{prototypeDateTo},
			maintenance_date_from = #{maintenanceDateFrom},
			maintenance_date_to = #{maintenanceDateTo},
			process_date = #{processDate},
			new_remarks = #{newRemarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE rm_repair_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 获取维修查询合同信息 -->
	<!-- <select id="getRepairOrderInfo" resultType="com.inbody.crm.rm.domain.RmRepairSnSearch">
		SELECT
		    a.sn_no AS "snNo",
		    a.production_date AS "productionDate",
		    a.warranty_date_to AS "warrantyDateTo",
		    d.model AS "model",
		    temp.order_no AS "orderNo",
		    temp.customer_ch_name AS "customerChName",
		    temp.end_customer_ch_name AS "endCustomerName"
		FROM sm_sn_info a
		INNER JOIN
		(SELECT 
		    b.order_no AS order_no,
		    c.line_no AS line_no,
		    MAX(e.customer_ch_name) AS customer_ch_name,
		    MAX(f.customer_ch_name) AS end_customer_ch_name
		FROM so_order b
		INNER JOIN so_order_dtl c ON b.id = c.order_id AND c.if_effective = '0'
		LEFT JOIN cm_customer_info e ON e.customer_id = b.customer_id
		LEFT JOIN cm_customer_info f ON f.customer_id = c.end_customer_id
		WHERE
			b.del_flag = #{DEL_FLAG_NORMAL}
			AND c.del_flag = #{DEL_FLAG_NORMAL}
			<if test="endCustomerName != null and endCustomerName != ''">
			AND f.customer_ch_name LIKE CONCAT(CONCAT('%', #{endCustomerName}), '%')
			</if>
			<if test="telephone != null and telephone != ''">
			AND (f.telephone LIKE CONCAT(CONCAT('%', #{telephone}), '%')
			     OR e.telephone LIKE CONCAT(CONCAT('%', #{telephone}), '%'))
			</if>
			<if test="customerChName != null and customerChName != ''">
			AND e.customer_ch_name LIKE CONCAT(CONCAT('%', #{customerChName}), '%')
			</if>
		GROUP BY b.order_no, c.line_no
		) temp ON a.order_no = temp.order_no AND a.line_no = temp.line_no
		LEFT JOIN sm_mat_info d ON d.material_no = a.material_no
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="snNo != null and snNo != ''">
			AND a.sn_no LIKE CONCAT(CONCAT('%', #{snNo}), '%')
			</if>
			<if test="model != null and model != ''">
			AND d.model LIKE CONCAT(CONCAT('%', #{model}), '%')
			</if>
		</where>
		ORDER BY a.order_no DESC, a.line_no ASC
	</select> -->
	<select id="getRepairOrderInfo" resultType="com.inbody.crm.rm.domain.RmRepairSnSearch">
		SELECT
		    a.sn_no AS "snNo",
		    a.production_date AS "productionDate",
		    a.warranty_date_to AS "warrantyDateTo",
		    b.order_no AS "orderNo",
		    d.model AS "model",
		    e.customer_ch_name AS "customerChName",
		    f.customer_ch_name AS "endCustomerName"
		FROM sm_sn_info a
		INNER JOIN so_order b ON b.order_no = a.order_no
		INNER JOIN so_order_dtl c ON c.order_id = b.id AND c.material_no = a.material_no AND c.line_no = a.line_no AND c.if_effective = '0'
		LEFT JOIN sm_mat_info d ON d.material_no = a.material_no
		LEFT JOIN cm_customer_info e ON e.customer_id = b.customer_id
		LEFT JOIN cm_customer_info f ON f.customer_id = c.end_customer_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND b.del_flag = #{DEL_FLAG_NORMAL}
			AND c.del_flag = #{DEL_FLAG_NORMAL}
			<if test="snNo != null and snNo != ''">
			AND a.sn_no LIKE CONCAT(CONCAT('%', #{snNo}), '%')
			</if>
			<if test="model != null and model != ''">
			AND d.model LIKE CONCAT(CONCAT('%', #{model}), '%')
			</if>
			<if test="endCustomerName != null and endCustomerName != ''">
			AND f.customer_ch_name LIKE CONCAT(CONCAT('%', #{endCustomerName}), '%')
			</if>
			<if test="telephone != null and telephone != ''">
			AND (f.telephone LIKE CONCAT(CONCAT('%', #{telephone}), '%')
			     OR e.telephone LIKE CONCAT(CONCAT('%', #{telephone}), '%'))
			</if>
			<if test="customerChName != null and customerChName != ''">
			AND e.customer_ch_name LIKE CONCAT(CONCAT('%', #{customerChName}), '%')
			</if>
		</where>
		ORDER BY a.order_no DESC, a.line_no ASC
	</select>

	<!-- 获取维修查询维修记录信息 -->
	<select id="getRepairInfo" resultType="com.inbody.crm.rm.domain.RmRepairSnSearch">
		SELECT 
		    a.repair_no AS "repairNo",
		    a.sn_no AS "sn_no",
		    a.issue_describe AS "issueDescribe",
		    b.production_date AS "productionDate",
		    b.warranty_date_to AS "warrantyDateTo",
		    c.model AS "model",
		    a.repair_cus_name AS "repairCusName"
		FROM rm_repair_info a
		INNER JOIN sm_sn_info b ON b.sn_no = a.sn_no
		LEFT JOIN sm_mat_info c ON c.material_no = b.material_no
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="snNo != null and snNo != ''">
			AND a.sn_no LIKE CONCAT(CONCAT('%', #{snNo}), '%')
			</if>
			<if test="model != null and model != ''">
			AND c.model LIKE CONCAT(CONCAT('%', #{model}), '%')
			</if>
			<if test="endCustomerName != null and endCustomerName != ''">
			AND a.repair_cus_name LIKE CONCAT(CONCAT('%', #{endCustomerName}), '%')
			</if>
			<if test="telephone != null and telephone != ''">
			AND a.telephone LIKE CONCAT(CONCAT('%', #{telephone}), '%')
			</if>
		</where>
		ORDER BY a.ask_repair_date DESC, a.repair_no DESC
	</select>
	
	<!-- 获取维修查询最新检测信息 -->
	<select id="getTestingInfo" resultType="com.inbody.crm.rm.domain.RmRepairSnSearch">
		SELECT 
            a.sn_no AS "snNo",
			a.sn_version AS "snVersion",
			a.lb_sn_no AS "lbSnNo",
            a.production_date AS "productionDate",
            a.status AS "macStatus",
            b.model AS "model",
            c.testing_date AS "testingDate"
		FROM sm_sn_info a
		LEFT JOIN sm_mat_info b ON b.material_no = a.material_no
		LEFT JOIN (SELECT MAX(t2.testing_date) AS "testing_date", t1.sn_no
                   FROM tm_testing_dtl t1
				   INNER JOIN tm_testing t2 ON t1.testing_no = t2.testing_no AND t1.del_flag = #{DEL_FLAG_NORMAL} AND t2.del_flag = #{DEL_FLAG_NORMAL}
				   GROUP BY t1.sn_no) c ON c.sn_no = a.sn_no
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="snNo != null and snNo != ''">
			AND a.sn_no LIKE CONCAT(CONCAT('%', #{snNo}), '%')
			</if>
			<if test="model != null and model != ''">
			AND b.model LIKE CONCAT(CONCAT('%', #{model}), '%')
			</if>
		</where>
		ORDER BY c.testing_date DESC
	</select>

	<!-- 根据id取得维修录入信息 -->
	<select id="getRepairInfoById" resultType="com.inbody.crm.rm.domain.RmRepairInfoEx">
		SELECT 
			<include refid="rmRepairInfoColumns"/>,
			b.production_date AS "prototypeProductionDate",
			c.id AS "preQuotaId",
			d.id AS "finalQuotaId"
		FROM rm_repair_info a
		LEFT JOIN sm_sn_info b ON b.sn_no = a.prototype_sn_no
		LEFT JOIN rm_quotation c ON c.repair_no = a.repair_no AND c.quotation_type = '1'
		LEFT JOIN rm_quotation d ON d.repair_no = a.repair_no AND d.quotation_type = '2'
		WHERE a.id = #{id}
		AND a.del_flag = '0'
	</select>

    <!-- 根据维修编号取得维修录入信息 -->
    <select id="getRepairInfoByNo" resultType="com.inbody.crm.rm.domain.RmRepairInfoEx">
        SELECT 
            <include refid="rmRepairInfoColumns"/>
        FROM rm_repair_info a
        WHERE a.repair_no = #{repairNo}
        AND a.del_flag = '0'
    </select>

	<!-- 获取维修S/N信息 -->
    <select id="getRepairSnInfo" resultType="com.inbody.crm.rm.domain.RmRepairSnInfo">
        SELECT
            a.sn_no AS "snNo",
            a.lb_sn_no AS "lbSnNo",
            a.production_date AS "productionDate",
            a.warranty_date_to AS "warrantyDateTo",
            a.actual_install_date AS "actualInstallDate",
            b.price_system AS "priceSystem",
            g.name AS "organizeName",
            d.model AS "model",
            e.customer_ch_name AS "customerName",
            f.customer_ch_name AS "endCustomerName"
        FROM sm_sn_info a
        LEFT JOIN so_order b ON b.order_no = a.order_no AND b.del_flag = '0'
        LEFT JOIN so_order_dtl c ON c.order_id = b.id AND c.material_no = a.material_no AND c.line_no = a.line_no AND c.if_effective = '0' AND c.del_flag = '0'
        LEFT JOIN sm_mat_info d ON d.material_no = a.material_no
        LEFT JOIN cm_customer_info e ON e.customer_id = b.customer_id
        LEFT JOIN cm_customer_info f ON f.customer_id = c.end_customer_id
        LEFT JOIN sys_office g ON g.id = c.organize
        WHERE a.sn_no = #{snNo}
        AND a.del_flag = '0'
    </select>

    <!-- 获取历史维修记录信息 -->
    <select id="getRepairHistory" resultType="com.inbody.crm.rm.domain.RmRepairInfoEx">
        SELECT 
            a.id AS "id",
            a.repair_no AS "repairNo",
            a.ask_repair_date AS "askRepairDate",
            a.repair_cus_name AS "repairCusName",
            a.contacts_name AS "contactsName",
            a.telephone AS "telephone",
            a.address AS "address",
            a.repair_method AS "repairMethod",
            a.issue_detail AS "issueDetail",
            a.issue_describe AS "issueDescribe",
            a.processing_content AS "processingContent",
            c.material_name AS "materialName"
        FROM rm_repair_info a
        INNER JOIN sm_sn_info b ON b.sn_no = a.sn_no
        LEFT JOIN (SELECT t1.repair_no,
                       group_concat(t3.material_name) AS material_name
                   FROM rm_quotation_dtl t1
                   INNER join rm_quotation t2
                   INNER join sm_mat_info t3
                   WHERE t1.quotation_no = t2.quotation_no
                   AND t2.quotation_type = '2'
                   AND t1.material_no = t3.material_no
                   AND (t3.material_type = '2' OR t3.material_type = '7')
                   GROUP BY t1.quotation_no) c ON c.repair_no = a.repair_no
        WHERE a.sn_no = #{snNo}
        ORDER BY a.repair_no DESC
    </select>

	<!-- 取得需要录入维修信息的sn是否存在 -->
	<!-- <select id="getRepairSnCount" resultType="java.lang.Integer">
		SELECT
		    count(a.sn_no)
		FROM sm_sn_info a
		WHERE a.sn_no = #{snNo}
		AND a.del_flag = '0'
	</select> -->

	<!-- 验证样机是否在sn管理中存在 -->
	<select id="getPrototypeInfo" resultType="com.inbody.crm.rm.domain.RmRepairInfoEx">
		SELECT
		    a.sn_no AS "snNo",
		    a.production_date AS "prototypeProductionDate"
		FROM sm_sn_info a
		WHERE a.sn_no = #{snNo}
		AND a.del_flag = '0'
	</select>

    <!-- 维修记录管理一览数据取得 -->
    <select id="getRepairInfoList" resultType="com.inbody.crm.rm.domain.RmRepairListSearch">
        SELECT
            a.id AS "id",
            a.repair_no AS "repairNo",
            a.ask_repair_date AS "askRepairDate",
            a.sn_no AS "snNo",
            a.repair_type AS "repairType",
            a.repair_cus_name AS "repairCusName",
            a.repair_method AS "repairMethod",
            a.issue_describe AS "issueDescribe",
            a.issue_detail AS "issueDetail",
            a.processing_content AS "processingContent",
            IFNULL(a.repair_status, '2') AS "repairStatus",
            b.production_date AS "productionDate",
            b.actual_install_date AS "actualInstallDate",
            c.model AS "mcModel",
            d.receive_status AS "receiveStatus",
            d.invoice_status AS "invoiceStatus",
            d.id AS "quotationId",
            d.quotation_no AS "quotationNo",
            IFNULL(d.if_out, '0') AS "ifOut",
            d.material_name AS "acMaterialName",
            IFNULL(e.if_occupy, '0') AS "ifOccupy"
        FROM rm_repair_info a
        INNER JOIN sm_sn_info b ON b.sn_no = a.sn_no
        LEFT JOIN sm_mat_info c ON c.material_no = b.material_no
        LEFT JOIN (SELECT t1.repair_no,
                       t2.id,
                       t2.receive_status,
                       t2.invoice_status,
                       t2.quotation_no,
                       t2.if_out,
                       group_concat(t3.material_name) AS material_name,
                       group_concat(t3.material_no) AS material_no
                   FROM rm_quotation_dtl t1
                   INNER JOIN rm_quotation t2
                   LEFT JOIN sm_mat_info t3 ON t3.material_no = t1.material_no AND (t3.material_type = '2' OR t3.material_type = '7')
                   WHERE t1.quotation_no = t2.quotation_no
                   AND t2.quotation_type = '2'
                   GROUP BY t1.quotation_no) d ON d.repair_no = a.repair_no
        LEFT JOIN rm_quotation e ON e.repair_no = a.repair_no AND e.quotation_type = '1'
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="repairNo != null and repairNo != ''">
            AND a.repair_no LIKE CONCAT('%', #{repairNo}, '%')
            </if>
            <if test="askRepairDateFrom != null and askRepairDateFrom != ''">
            AND a.ask_repair_date &gt;= #{askRepairDateFrom}
            </if>
            <if test="askRepairDateTo != null and askRepairDateTo != ''">
            AND a.ask_repair_date &lt;= #{askRepairDateTo}
            </if>
            <if test="repairCusName != null and repairCusName != ''">
            AND a.repair_cus_name LIKE CONCAT('%', #{repairCusName}, '%')
            </if>
            <if test="snNo != null and snNo != ''">
            AND a.sn_no LIKE CONCAT('%', #{snNo}, '%')
            </if>
            <if test="responsiblePersonId != null and responsiblePersonId != ''">
            AND a.responsible_person_id = #{responsiblePersonId}
            </if>
            <if test="repairType != null and repairType != ''">
            AND a.repair_type = #{repairType}
            </if>
            <if test="repairStatus != null and repairStatus != ''">
            AND IFNULL(a.repair_status, '2') = #{repairStatus}
            </if>
            <if test="repairMethod != null and repairMethod != ''">
            AND a.repair_method = #{repairMethod}
            </if>
            <if test="mcModel != null and mcModel != ''">
            AND c.material_no = #{mcModel}
            </if>
            <if test="receiveStatus != null and receiveStatus != ''">
            AND d.receive_status = #{receiveStatus}
            </if>
            <if test="invoiceStatus != null and invoiceStatus != ''">
            AND d.invoice_status = #{invoiceStatus}
            </if>
            <if test="acModel != null and acModel != ''">
            AND d.material_no LIKE CONCAT('%', #{acModel}, '%')
            </if>
            <if test="ifOccupy != null and ifOccupy != ''">
            AND IFNULL(e.if_occupy, '0') = #{ifOccupy}
            </if>
        </where>
        ORDER BY IF(repairStatus &lt;&gt; '2', '1', '0') ASC, ifOccupy DESC, askRepairDate DESC
    </select>

    <!-- 维修记录管理一览Excel导出数据取得 -->
    <select id="getRepairInfoExportList" resultType="com.inbody.crm.rm.domain.RmRepairListSearch">
        SELECT
            a.repair_no AS "repairNo",
            a.sn_no AS "snNo",
            a.ask_repair_date AS "askRepairDate",
            a.repair_type AS "repairType",
            a.repair_cus_name AS "repairCusName",
            a.repair_method AS "repairMethod",
            a.issue_describe AS "issueDescribe",
            a.issue_detail AS "issueDetail",
            a.processing_content AS "processingContent",
            IFNULL(a.repair_status, '2') AS "repairStatus",
            b.production_date AS "productionDate",
            b.actual_install_date AS "actualInstallDate",
            c.model AS "mcModel",
            g.num AS "num",
            g.act_amount AS "amount",
            g.line_no AS "lineNo",
            d.receive_status AS "receiveStatus",
            d.invoice_status AS "invoiceStatus",
            h.material_name AS "acMaterialName",
            e.name AS "engineer",
            IFNULL(f.if_occupy, '0') AS "ifOccupy"
        FROM rm_repair_info a
        INNER JOIN sm_sn_info b ON b.sn_no = a.sn_no
        LEFT JOIN sm_mat_info c ON c.material_no = b.material_no
        LEFT JOIN (SELECT t1.repair_no,
                       t2.id,
                       t2.receive_status,
                       t2.invoice_status,
                       t2.quotation_no,
                       t2.if_out,
                       group_concat(t1.material_no) AS material_no
                   FROM rm_quotation_dtl t1
                   INNER JOIN rm_quotation t2
                   WHERE t1.quotation_no = t2.quotation_no
                   AND t2.quotation_type = '2'
                   GROUP BY t1.quotation_no) d ON d.repair_no = a.repair_no
        LEFT JOIN sys_user e ON e.id = a.responsible_person_id
        LEFT JOIN rm_quotation f ON f.repair_no = a.repair_no AND f.quotation_type = '1'
        LEFT JOIN rm_quotation_dtl g ON g.quotation_no = d.quotation_no
        LEFT JOIN sm_mat_info h ON h.material_no = g.material_no
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="repairNo != null and repairNo != ''">
            AND a.repair_no LIKE CONCAT(CONCAT('%', #{repairNo}), '%')
            </if>
            <if test="askRepairDateFrom != null and askRepairDateFrom != ''">
            AND a.ask_repair_date &gt;= #{askRepairDateFrom}
            </if>
            <if test="askRepairDateTo != null and askRepairDateTo != ''">
            AND a.ask_repair_date &lt;= #{askRepairDateTo}
            </if>
            <if test="repairCusName != null and repairCusName != ''">
            AND a.repair_cus_name LIKE CONCAT(CONCAT('%', #{repairCusName}), '%')
            </if>
            <if test="snNo != null and snNo != ''">
            AND a.sn_no LIKE CONCAT(CONCAT('%', #{snNo}), '%')
            </if>
            <if test="responsiblePersonId != null and responsiblePersonId != ''">
            AND a.responsible_person_id = #{responsiblePersonId}
            </if>
            <if test="repairType != null and repairType != ''">
            AND a.repair_type = #{repairType}
            </if>
            <if test="repairStatus != null and repairStatus != ''">
            AND IFNULL(a.repair_status, '2') = #{repairStatus}
            </if>
            <if test="repairMethod != null and repairMethod != ''">
            AND a.repair_method = #{repairMethod}
            </if>
            <if test="mcModel != null and mcModel != ''">
            AND c.material_no = #{mcModel}
            </if>
            <if test="receiveStatus != null and receiveStatus != ''">
            AND d.receive_status = #{receiveStatus}
            </if>
            <if test="invoiceStatus != null and invoiceStatus != ''">
            AND d.invoice_status = #{invoiceStatus}
            </if>
            <if test="acModel != null and acModel != ''">
            AND d.material_no LIKE CONCAT('%', #{acModel}, '%')
            </if>
            <if test="ifOccupy != null and ifOccupy != ''">
            AND IFNULL(f.if_occupy, '0') = #{ifOccupy}
            </if>
        </where>
        ORDER BY IF(repairStatus &lt;&gt; '2', '1', '0') ASC, ifOccupy DESC, askRepairDate DESC, repairNo DESC, lineNo ASC
    </select>

	<sql id="smSnInfoColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.sn_no AS "snNo",
		a.sn_version AS "snVersion",
		a.lb_sn_no AS "lbSnNo",
		a.material_no AS "materialNo",
		a.storage_id AS "storageId",
		a.warehouse AS "warehouse",
		a.production_date AS "productionDate",
		a.entry_date AS "entryDate",
		a.machine_type AS "machineType",
		a.status AS "status",
		a.warranty_date_from AS "warrantyDateFrom",
		a.warranty_date_to AS "warrantyDateTo",
		a.if_install AS "ifInstall",
		a.if_locked AS "ifLocked",
		a.install_person_id AS "installPersonId",
		a.latest_install_date AS "latestInstallDate",
		a.actual_install_date AS "actualInstallDate",
		a.purchase_no AS "purchaseNo",
		a.order_no AS "orderNo",
		a.line_no AS "lineNo",
		a.old_order_no AS "oldOrderNo",
		a.old_line_no AS "oldLineNo"
	</sql>
    
	<select id="getSnInfo" resultType="SnInfo">
		SELECT 
			<include refid="smSnInfoColumns"/>
			,smi.model AS "model"
		FROM sm_sn_info a
		INNER JOIN sm_mat_info smi ON a.material_no = smi.material_no
		WHERE a.del_flag = '0'
			AND a.sn_no = #{snNo}
	</select>
	
	<update id="updateSnInfo">
		UPDATE sm_sn_info SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			lb_sn_no = #{lbSnNo}
		WHERE id = #{id}
	</update>
</mapper>
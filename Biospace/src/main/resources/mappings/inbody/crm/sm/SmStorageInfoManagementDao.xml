<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.sm.dao.SmStorageInfoManagementDao">
    
	<sql id="smStorageInfoColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.storage_id AS "storageId",
		a.storage_apply_id AS "storageApplyId",
		a.storage_type AS "storageType",
		a.purchase_no AS "purchaseNo",
		a.order_no AS "orderNo",
		a.line_no AS "lineNo",
		a.sn_no AS "snNo",
		a.material_no AS "materialNo",
		a.num AS "num",
		a.warehouse AS "warehouse",
		a.process_date AS "processDate",
		a.responsible_person_id AS "responsiblePersonId",
		a.new_remarks AS "newRemarks",
		a.lending_type AS "lendingType",
		a.industry AS "industry",
		a.address AS "address",
		a.contacts_name AS "contactsName",
		a.telephone AS "telephone",
		a.accessories_remarks AS "accessoriesRemarks",
		a.lending_date_from AS "lendingDateFrom",
		a.lending_date_to AS "lendingDateTo",
		a.extend_date_to AS "extendDateTo"
	</sql>
	
	<sql id="smStorageInfoJoins">
	</sql>
    
	<sql id="smStorageInfoSn">
	    s.id as id,
	    s.storage_id as storageId,
	    s.STORAGE_TYPE as storageType,
	    s.MATERIAL_NO as materialNo,
	    s.SN_NO as snNo,
		s.NUM as num ,
		s.WAREHOUSE as warehouse,
		s.ORDER_NO as orderNo,
		s.PURCHASE_NO as purchaseNo,
		s.CONTACTS_NAME as contactsName,
		s.ADDRESS as address,
		s.LENDING_DATE_FROM as lendingDateFrom,
		s.LENDING_DATE_TO as lendingDateTo,
		s.telephone as telephone,
		s1.production_date as productionDateStr,
		s.INSTALL_PERSON_ID as installPersonId,
		s.LATEST_INSTALL_DATE   as latestInstallDateStr,
		CONCAT(m.MATERIAL_NAME," ",m.MODEL) as materielName,
		m.IF_VIRTUAL_SN as ifvirtualsn,
		DATE_FORMAT(s1.UPDATE_DATE,"%Y-%m-%d %H:%i:%s.%f") as updateDateSN,
		s.LENDING_TYPE as lendingType,
		s.INDUSTRY as industry,
	   	s.CUSTOMER_NAME as customerName,
	   	s.ACTUAL_INSTALL_DATE as actualInstallDateStr,
	   	DATE_FORMAT(s.CREATE_DATE,"%Y-%m-%d")as processDate,
		u.name as noteTaker,
	</sql>
	
	
	<select id="get" resultType="SmStorageInfo">
		SELECT 
			<include refid="smStorageInfoColumns"/>
		FROM sm_storage_info a
			<include refid="smStorageInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SmStorageInfoManagement">
		SELECT 
			<include refid="smStorageInfoSn"/>
			m.MATERIAL_TYPE as materialType,
			s.if_install as ifInstall,
			case when left(s.STORAGE_TYPE,1) = '1' then '入库' when left(s.STORAGE_TYPE,1) = '2' then '出库' else s.STORAGE_TYPE end as distinguish
		FROM sm_storage_info s
		LEFT JOIN sm_sn_info s1
		on s.SN_NO = s1.SN_NO
		LEFT JOIN sm_mat_info m 
		on s.MATERIAL_NO=m.MATERIAL_NO
		LEFT JOIN sys_user u on s.CREATE_BY = u.id
		<where>
			and s.del_flag = #{DEL_FLAG_NORMAL}
			<if test="storageId != null and storageId != ''">
				and s.STORAGE_ID = #{storageId}
			</if>
			<if test="materialNo != null and materialNo != ''">
				and s.MATERIAL_NO = #{materialNo}
			</if>
			<if test="snNo != null and snNo != ''">
				and s.SN_NO LIKE CONCAT('%', #{snNo}, '%')
			</if>
			<if test="materielName != null and materielName != ''">
				and s.MATERIAL_NO in(select a.MATERIAL_NO from sm_mat_info a where a.MATERIAL_NAME like concat('%',#{materielName},'%')  or a.MODEL like concat('%',#{materielName},'%')  )
			</if>
			<if test="storageType != null and storageType != ''">
				and s.STORAGE_TYPE = #{storageType}
			</if>
			<if test="orderNo != null and orderNo != ''">
				and s.ORDER_NO LIKE CONCAT('%', #{orderNo}, '%')
			</if>
			<if test="purchaseNo != null and purchaseNo != ''">
				and s.PURCHASE_NO LIKE CONCAT('%', #{purchaseNo}, '%')
			</if>
			<if test="processDateFrom != null and processDateFrom != ''">
			    and DATE_FORMAT(s.CREATE_DATE,'%Y-%m-%d') &gt;= DATE_FORMAT(#{processDateFrom},'%Y-%m-%d')
			</if>
			<if test="processDateTo != null and processDateTo != ''">
			    and DATE_FORMAT(s.CREATE_DATE,'%Y-%m-%d') &lt;= DATE_FORMAT(#{processDateTo},'%Y-%m-%d')
			</if>
			<if test="ExceedLatestDate != null and ExceedLatestDate != ''">
			    and s.ACTUAL_INSTALL_DATE is null  and s.IF_INSTALL ='1'
				and DATE_FORMAT(NOW(),'%Y-%m-%d') > s.LATEST_INSTALL_DATE 
			</if>
			<if test="materialType != null and materialType !=''">
			    and s.MATERIAL_NO in 
			    (select c.MATERIAL_NO from sm_mat_info c where c.MATERIAL_TYPE=#{materialType})
			</if>
		</where>
		ORDER BY s.CREATE_DATE DESC
	</select>
		
	<select id="selectById" resultType="java.util.Map">
		select  workflow_status,CREATE_BY as createBy,UPDATE_BY as updateBy  from  SM_STORAGE_APP   WHERE id=#{id}
	</select>
	
	<select id="selectByWarehouseAndMaterialNo"></select>
	
	
	
	<select id="findAllList" resultType="SmStorageInfoManagement">
		SELECT 
			<include refid="smStorageInfoSn"/>
			m.MATERIAL_TYPE as materialType,
			s.if_install as ifInstall,
			case when left(s.STORAGE_TYPE,1) = '1' then '入库' when left(s.STORAGE_TYPE,1) = '2' then '出库' else s.STORAGE_TYPE end as distinguish
		FROM sm_storage_info s
		LEFT JOIN sm_sn_info s1
		on s.SN_NO = s1.SN_NO
		LEFT JOIN sm_mat_info m 
		on s.MATERIAL_NO=m.MATERIAL_NO
		LEFT JOIN sys_user u on s.CREATE_BY = u.id
		<where>
			and s.del_flag = #{DEL_FLAG_NORMAL}
			<if test="storageId != null and storageId != ''">
				and s.STORAGE_ID = #{storageId}
			</if>
			<if test="materialNo != null and materialNo != ''">
				and s.MATERIAL_NO = #{materialNo}
			</if>
			<if test="snNo != null and snNo != ''">
				and s.SN_NO LIKE CONCAT('%', #{snNo}, '%')
			</if>
			<if test="materielName != null and materielName != ''">
				and s.MATERIAL_NO in(select a.MATERIAL_NO from sm_mat_info a where a.MATERIAL_NAME like concat('%',#{materielName},'%')  or a.MODEL like concat('%',#{materielName},'%')  )
			</if>
			<if test="storageType != null and storageType != ''">
				and s.STORAGE_TYPE = #{storageType}
			</if>	
			<if test="orderNo != null and orderNo != ''">
				and s.ORDER_NO LIKE CONCAT('%', #{orderNo}, '%')
			</if>
			<if test="purchaseNo != null and purchaseNo != ''">
				and s.PURCHASE_NO LIKE CONCAT('%', #{purchaseNo}, '%')
			</if>
			<if test="ExceedLatestDate != null and ExceedLatestDate != ''">
				and s.ACTUAL_INSTALL_DATE is null  and s.IF_INSTALL ='1'
				and DATE_FORMAT(NOW(),'%Y-%m-%d') > s.LATEST_INSTALL_DATE 
			</if>
			<if test="processDateFrom != null and processDateFrom != ''">
			    and DATE_FORMAT(s.CREATE_DATE,'%Y-%m-%d') &gt;= DATE_FORMAT(#{processDateFrom},'%Y-%m-%d')
			</if>
			<if test="processDateTo != null and processDateTo != ''">
			    and s.CREATE_DATE  &lt;   #{processDateTo}
			</if>
			<if test="materialType != null and materialType !=''">
			    and s.MATERIAL_NO in 
			    (select c.MATERIAL_NO from sm_mat_info c where c.MATERIAL_TYPE=#{materialType})
			</if>
		</where>
		ORDER BY s.CREATE_DATE DESC
	</select>
	
	
	<select id ="selectByResponsiblePersonId" resultType="java.util.Map">
		SELECT  
			ssi.id,
			ssi.MATERIAL_NO as materialNo,
			smi.MATERIAL_NAME as materialName,
			smi.MODEL as model,
			ssi.SN_NO as snNo,
			ssi.WAREHOUSE as warehouse,
			ssn.production_date as productionDate,
			<!-- ssi.num, -->
			sml.num,
			ssi.lending_type as lendingType,
			ssi.contacts_name as contactsName,
			ssapp.customer_name as customerName,
			ssi.INDUSTRY,
			ssi.new_remarks as newRemarks,
			ssi.accessories_remarks as accessoriesRemarks,
			ssi.lending_date_from as lendingDateFrom,
			ssi.lending_date_to as lendingDateTo,
			sml.lending_date_to as lendingDateTos
		from sm_lending_mat as sml 
			INNER JOIN 	sm_storage_info as ssi on sml.storage_id = ssi.storage_id
			LEFT JOIN sm_sn_info as ssn on ssn.SN_NO=ssi.SN_NO
			LEFT JOIN sm_storage_app_dtl as ssa on ssa.ID = ssi.storage_apply_id
			left JOIN sm_storage_app as ssapp on ssapp.ID = ssa.APP_ID
			INNER JOIN sm_mat_info as smi on smi.MATERIAL_NO= ssi.MATERIAL_NO
		where  ssi.storage_type='22' and ssi.responsible_person_id=#{createBy.id} AND sml.del_flag = '0'
		ORDER BY sml.lending_date_to
	</select>
	
	
	<select id ="selectBySsiInfoId" resultType="java.util.Map">
		SELECT  
			ssi.id,
			ssi.MATERIAL_NO as materialNo,
			smi.MATERIAL_NAME as materialName,
			smi.MODEL as model,
			ssi.SN_NO as snNo,
			ssi.WAREHOUSE as warehouse,
			ssn.production_date as productionDate,
			ssi.num,
			ssi.lending_type as lendingType,
			ssi.contacts_name as contactsName,
			ssi.CUSTOMER_NAME AS customerName,
			ssi.INDUSTRY,
			ssi.new_remarks as newRemarks,
			ssi.accessories_remarks as accessoriesRemarks,
			ssi.lending_date_from as lendingDateFrom,
			ssi.lending_date_to as lendingDateTo
		from sm_storage_info as ssi
			LEFT JOIN sm_sn_info as ssn on ssn.SN_NO=ssi.SN_NO
			LEFT JOIN sm_storage_app_dtl as ssa on ssa.ID = ssi.storage_apply_id
			left JOIN sm_storage_app as ssapp on ssapp.ID = ssa.APP_ID
			INNER JOIN sm_mat_info as smi on smi.MATERIAL_NO= ssi.MATERIAL_NO
		where  ssi.id=#{Id}
	</select>
	
	<select id="selectBySsiId" resultType="java.util.Map">
		SELECT * from sm_storage_info as ssi
			left JOIN sm_sn_info as ssn on ssn.SN_NO=ssi.SN_NO
			inner JOIN sm_storage_app_dtl as ssa on ssa.ID = ssi.storage_apply_id 
		WHERE    
			ssi.id = #{Id}
	</select>
	
	
	
	<insert id="insert">
		INSERT INTO sm_storage_info(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			storage_id,
			storage_apply_id,
			storage_type,
			purchase_no,
			order_no,
			line_no,
			sn_no,
			material_no,
			num,
			warehouse,
			process_date,
			responsible_person_id,
			new_remarks,
			lending_type,
			industry,
			address,
			contacts_name,
			telephone,
			lending_date_from,
			lending_date_to
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{storageId},
			#{storageApplyId},
			#{storageType},
			#{purchaseNo},
			#{orderNo},
			#{lineNo},
			#{snNo},
			#{materialNo},
			#{num},
			#{warehouse},
			#{createDate},
			#{createBy.id},
			#{newRemarks},
			#{lendingType},
			#{industry},
			#{address},
			#{contactsName},
			#{telephone},
			#{lendingDateFrom},
			#{lendingDateTo}
		)
	</insert>
	
	
	<insert id="insertBySelect">
		INSERT into SM_STORAGE_INFO
		(
			id,
			storage_id,
			storage_apply_id,
			storage_type,
			purchase_no,
			order_no,
			line_no,	
			sn_no,
			material_no,
			num,
			warehouse,
			process_date,
			responsible_person_id,
			new_remarks,
			lending_type,
			industry,
			address,
			CONTACTS_NAME,
			CUSTOMER_NAME,
			telephone,
			accessories_remarks,
			lending_date_from,
			lending_date_to,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		)
		SELECT 
			#{id},
			#{storageId} as  storage_id ,
			w.id as storage_apply_id ,
			#{storageType} as storage_type,
			NULL as purchase_no,
			NULL AS order_no,
			NULL as line_no,
			w.sn_no as sn_no,
			w.material_no AS material_no,
			w.num as num,
			w.warehouse as warehouse,
			s.process_date,
			s.RESPONSIBLE_PERSON_ID as responsible_person,
			s.new_remarks,
			s.lending_type,
			s.industry,
			w.address,
			w.CONTACTS_NAME,
			s.CUSTOMER_NAME,
			w.telephone,
			w.accessories_remarks,
			s.lending_date_from,
			w.lending_date_to,
			s.CREATE_BY,
			#{createDate},
			#{createBy.id},
			#{createDate},
			'0'
			from SM_STORAGE_APP_DTL as w 
			LEFT JOIN SM_STORAGE_APP as s ON w.app_id=s.id 
		WHERE w.id = #{storageApplyId}
	</insert>
	
	<insert id="insertBySelectOrder">
		INSERT into SM_STORAGE_INFO
		(
			id,
			storage_id,
			storage_apply_id,
			storage_type,
			purchase_no,
			order_no,
			line_no,
			sn_no,
			material_no,
			num,
			warehouse,
			process_date,
			responsible_person_id,
			new_remarks,
			lending_type,
			industry,
			address,
			CONTACTS_NAME,
			telephone,
			accessories_remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		)
		SELECT 
			#{id},
			#{storageId} as  storage_id ,
			w.id as storage_apply_id ,
			#{storageType} as storage_type,
			NULL as purchase_no,
			w.order_no AS order_no,
			w.line_no as line_no,
			w.new_sn_no,
			w.material_no AS material_no,
			w.num as num,
			w.warehouse as warehouse,
			s.process_date,
			s.RESPONSIBLE_PERSON_ID as responsible_person,
			s.new_remarks,
			s.lending_type,
			s.industry,
			w.address,
			s.CUSTOMER_NAME,
			w.telephone,
			w.accessories_remarks,
			s.CREATE_BY,
			#{createDate},
			#{createBy.id},
			#{createDate},
			'0'
		from SM_STORAGE_APP_DTL as w 
				LEFT JOIN SM_STORAGE_APP as s ON w.app_id=s.id 
		WHERE w.id = #{storageApplyId}
	</insert>
	
	<insert id="insertLendingBySelectOrder">
		INSERT into SM_LENDING_MAT(
			id,
			storage_id,
			CREATE_BY,
			CREATE_DATE,
			update_by,
			update_date,
			workflow_status,
			sn_no,
			material_no,
			warehouse,
			num,
			lender_name,
			lending_date_from,
			lending_date_to,
			del_flag
		) 
		select
			#{id},
			#{storageId},
			#{createBy.id},
			#{createDate},
			#{createBy.id},
			#{createDate},
			'50',
			sad.sn_no,
			sad.material_no,
			sad.WAREHOUSE,
			sad.NUM,
			sa.CUSTOMER_NAME,
			sa.LENDING_DATE_FROM,
			sad.LENDING_DATE_TO,
			'0'
		from sm_storage_app_dtl  as sad 
			INNER JOIN sm_storage_app  as sa on sa.ID=sad.APP_ID 
		where sad.id = #{storageApplyId}
	</insert>
	
	
		<update id="insertInfoByInfoId">
			update 
			sm_storage_info 
		set UPDATE_BY=#{updateBy.id},UPDATE_DATE=#{updateDate},
			extend_date_to=#{lendingDateTo}
		where 
			id=#{storageId}
	</update>
	
	<update id="updateByStorageId">
		update 
			sm_lending_mat 
		set UPDATE_BY=#{updateBy.id},UPDATE_DATE=#{updateDate},
			LENDING_DATE_TO=#{lendingDateTo}
		where 
			storage_id=(SELECT STORAGE_ID from sm_storage_info where id=#{storageId})
	</update>
	
	
	
	
	
	<update id="update">
		UPDATE sm_storage_info SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			num = #{num},
			warehouse = #{warehouse},
			RESPONSIBLE_PERSON_ID=#{updateBy.id},
			process_date=#{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="updateSmStorageAppById">
	UPDATE sm_storage_app SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			lending_type = #{lendingType},
			customer_name = #{customerName},
			industry = #{industry},
			lending_date_from = #{lendingDateFrom},
			new_remarks = #{newRemarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sm_storage_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteDtlAppId">
		delete from SM_STORAGE_APP_DTL where app_id = #{id}
	</delete>
	
		<update id="deleteDtlId">
		UPDATE sm_storage_app SET 
			DEL_FLAG = '1'
		WHERE id = #{id}
	</update>
	
	<update id="updateWorkflowStatusById">
		UPDATE sm_storage_app SET 
			WORKFLOW_STATUS = #{workflowStatus}
		WHERE id = #{id}
	</update>
	
	<update id="updateSn">
	    update sm_sn_info
	    set sn_no = #{actualSN},production_date = #{productionDateStr},UPDATE_DATE = #{updateDate},UPDATE_BY=#{userId}
		where sn_no=#{snNo}
	</update>
	
	<update id="updateStorageSn" >
	    update sm_storage_info set sn_no=#{actualSN},UPDATE_DATE = #{updateDate},UPDATE_BY=#{userId}
	    where sn_no=#{snNo}
	</update>
	
	<update id="updateTestingSn" >
	    update TM_TESTING_DTL set sn_no=#{actualSN},UPDATE_DATE = #{updateDate},UPDATE_BY=#{userId}
	    where sn_no=#{snNo}
	</update>
	
	<update id="updateWarehouseSn">
	    update SM_WAREHOUSE_INFO set sn_no=#{actualSN},UPDATE_DATE = #{updateDate},UPDATE_BY=#{userId}
	    where sn_no=#{snNo}
	</update>
	
	<select id="selectSnUpdateDate" resultType="SmStorageInfoManagement">
	    select UPDATE_DATE as SNUpdateDate,ACTUAL_INSTALL_DATE as actualInstallDateStr,INSTALL_PERSON_ID as installPersonId 
	    from sm_sn_info
	    where SN_NO = #{snNo}
	</select>
	
	<select id="selectStorageUpdateDate" resultType="SmStorageInfoManagement">
	    select UPDATE_DATE as SNUpdateDate,ACTUAL_INSTALL_DATE as actualInstallDateStr,INSTALL_PERSON_ID as installPersonId 
	    from sm_storage_info
	    where id = #{id}
	</select>
	
	<update id="updateInstall">
	    update sm_sn_info 
	    set INSTALL_PERSON_ID=#{installPerson},
	    ACTUAL_INSTALL_DATE=#{actualInstallDateStr},
	    WARRANTY_DATE_FROM = #{actualInstallDateStr},
	    WARRANTY_DATE_TO = #{warrantyDateTo},
	    UPDATE_DATE = #{updateDate},
	    UPDATE_BY=#{userId}
	    where SN_NO = #{snNo}
	</update>
	
	<update id="updateStorageInstall">
	    update sm_storage_info 
	    set INSTALL_PERSON_ID=#{installPerson},ACTUAL_INSTALL_DATE=#{actualInstallDateStr},
	    UPDATE_DATE = #{updateDate},UPDATE_BY=#{userId}
	    where id = #{id}
	</update>
	
	<select id="selectStorageMat" resultType="SmStorageInfoManagement">
	    select s2.IF_VIRTUAL_SN as ifvirtualsn from sm_storage_info s
		LEFT JOIN sm_mat_info s2
		on s.MATERIAL_NO = s2.MATERIAL_NO
		where s2.IF_VIRTUAL_SN=1
		and s.SN_NO=#{snNo}
	</select>
	<select id="getPeriod" resultType="java.util.Map">
	    select s2.WARRANTY_PERIOD as warrantyPeriod,s2.EXTENDED_WARR_PERIOD as extendedWarrPeriod from sm_storage_info s
		LEFT JOIN so_order  s1
		on s.ORDER_NO = s1.ORDER_NO
		LEFT JOIN so_order_dtl s2
		on s1.ID = s2.ORDER_ID
		where s.MATERIAL_NO = s2.MATERIAL_NO
		and s.LINE_NO = s2.LINE_NO
		and s.id=#{id}
	</select>
</mapper>
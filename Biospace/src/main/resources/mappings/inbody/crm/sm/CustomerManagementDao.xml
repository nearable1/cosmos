<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.cm.dao.CustomerManagementDao">

	
	<sql id="customerColumns">
	    a.id as id,
	    a. CUSTOMER_ID as customerId,
	    a.PROC_INS_ID as procInsId,
	    a.CUSTOMER_CH_NAME as customerChName,
	    a.DEVELOP_DATE as developDateStr,
	     a.DEVELOP_DATE as developDate,
	     
	    (select customer_ch_name from CM_CUSTOMER_INFO cm where a.CUSTOMER_PARENT_CO=cm.customer_id) as customerParentCo,
	    a.LAST_VISIT_DATE as lastVisitDate,
	    (select name from sys_area where a.province = code) as province,
	    (select name from sys_area where a.city = code ) as city,
	    (select label from sys_dict where   value =a.customer_type   and type='DM0001'  ) as customerType,
	    (select name from sys_user where a.responsible_person_id = sys_user.id  ) as  responsiblePersonId,
	    DATE_FORMAT((select max(a1.validity_date_from) from CM_AGREEMENT a1 where a1.agreement_paties_id = a.customer_id),"%Y-%m-%d")
	    as validityDateFrom,
	    DATE_FORMAT((select max(a1.validity_date_to) from CM_AGREEMENT a1 where a1.agreement_paties_id = a.customer_id),"%Y-%m-%d")
	    as validityDateTo
	</sql>
	
	<sql id="editcustomerColumns">
	    a.CUSTOMER_ID as customerId,
	    a.CUSTOMER_CH_NAME as customerChName,
	    a.CUSTOMER_TYPE as customerType,
	    a.DEVELOP_DATE as developDateStr,
	     a.DEVELOP_DATE as developDate,
	    a.IF_EFFECTIVE as ifEffective ,
	    a.IF_IMPORTANT as ifImportant ,
	    a.INDUSTRY as industry,
	    a.customer_diff as customerDiff,
	    a.responsible_person_id as responsiblePersonId,
	    (select name from sys_user where a.responsible_person_id = sys_user.id  ) as  responsiblePersonName,
	    (select name from SYS_OFFICE where id = a.organize)  as officeName,
	    a.organize as officeId,
	    a.region as region,
	    a.province as province,
	    a.city as city,
	    (select name from sys_area where a.province = code) as provinceName,
	    (select name from sys_area where a.city = code ) as cityName,
	    a.address as address,
	    a.customer_parent_co as customerParentCo,
	    (select customer_ch_name from CM_CUSTOMER_INFO cm where a.CUSTOMER_PARENT_CO=cm.customer_id) as customerParentCoName,
	    a.last_visit_date as lastVisitDate,
	    a.ax_cus_no as axCusNo,
	    a.invoice_type as invoiceType,
	    a.invoice_title as invoiceTitle,
	    a.taxpayer_ident_no as taxpayerIdentNo,
	    a.deposit_bank as depositBank,
	    a.bank_account as bankAccount,
	    a.invoice_address as invoiceAddress,
	    a.telephone as telephone,
	    a.zip_code as zipCode
	</sql>
	
	<select id="selectOfficeById" resultType="CustomerManagement">
	    	select 
	    	NAME as officeName,
	    	ID as officeId ,
	    	DATE_FORMAT(NOW(),"%Y-%m-%d") as developDate
	    	from SYS_OFFICE
	    	where TYPE = '3' 
	    	and id=(select i.office_id from sys_user i WHERE i.id=#{id})
	    	ORDER BY ID
	</select>
	
	
	<select id="findList" resultType="CustomerManagement">
	      select a.INDUSTRY as industry,a.IF_EFFECTIVE as ifEffective,a.REGION as region,a.IF_IMPORTANT as ifImportant,
	      <include refid="customerColumns"/>
	      from CM_CUSTOMER_INFO a
		  <where>
	          	and a.del_flag =  #{DEL_FLAG_NORMAL}
	          	<if test="customerType != null and customerType != ''">
	          	    and a.CUSTOMER_TYPE = #{customerType}
	          	</if>
	          	<if test="customerChName != null and customerChName != ''">
	          	    and a.customer_ch_name  like concat('%',#{customerChName},'%')
	          	</if>
	          	<if test="developDateFrom != null and developDateFrom != ''">
	          	   and DATE_FORMAT(a.DEVELOP_DATE,"%Y-%m-%d") &gt;= DATE_FORMAT(#{developDateFrom},"%Y-%m-%d")
	          	</if>
	          	<if test="developDateTo != null and developDateTo != ''">
	          	    and DATE_FORMAT(a.DEVELOP_DATE,"%Y-%m-%d") &lt;= DATE_FORMAT(#{developDateTo},"%Y-%m-%d")
	          	</if>
	          	<if test="industry != null and industry != ''">
	          	   and  a.INDUSTRY = #{industry}
	          	</if>
	          	<if test="responsiblePersonId != null and responsiblePersonId != ''">
	          	    and a.RESPONSIBLE_PERSON_ID = (select id from sys_user where id =  #{responsiblePersonId})
	          	</if>
	          	<if test="ifEffective !=null and ifEffective != ''">
	          	    and a.IF_EFFECTIVE = 1
	          	</if>
	          	<if test="ifImportant !=null and ifImportant != ''">
	          	    and a.IF_IMPORTANT = 1
	          	</if>
	          	<if test="officeId !=null and officeId != ''">
	          	    and a.ORGANIZE = #{officeId}
	          	</if>
	          	<if test="region != null and region != ''">
	          	    and a.REGION = #{region}
	          	</if>
				<if test="sqlMap != null and sqlMap.dataScope != null">
					AND a.RESPONSIBLE_PERSON_ID in ${sqlMap.dataScope}
				</if>
	      </where>
		  <choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.CUSTOMER_ID DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CustomerManagement">
	    select 
	    (select label from sys_dict where a.INDUSTRY = value and type='DM0002') as industry,
	    case when a.IF_EFFECTIVE = 1 then '是' when a.IF_EFFECTIVE = 0 then '否' else a.IF_EFFECTIVE end as ifEffectiveStr,
	    case when a.IF_IMPORTANT = 1 then '是' when a.IF_IMPORTANT = 0 then '否' else a.IF_IMPORTANT end as ifImportantStr,
	    (select label from sys_dict where a.REGION = value and type='DM0049') as region,
	    <include refid="customerColumns"/>
	     from CM_CUSTOMER_INFO a
	      LEFT JOIN sys_user u
		  on u.id = a.RESPONSIBLE_PERSON_ID
	      <where>
	          	and a.del_flag =  #{DEL_FLAG_NORMAL}
	          	<if test="customerType != null and customerType != ''">
	          	    and a.CUSTOMER_TYPE = #{customerType}
	          	</if>
	          	<if test="customerChName != null and customerChName != ''">
	          	    and a.customer_ch_name  like concat('%',#{customerChName},'%')
	          	</if>
	          	<if test="developDateFrom != null and developDateFrom != ''">
	          	   and DATE_FORMAT(a.DEVELOP_DATE,"%Y-%m-%d") &gt;= DATE_FORMAT(#{developDateFrom},"%Y-%m-%d")
	          	</if>
	          	<if test="developDateTo != null and developDateTo != ''">
	          	    and DATE_FORMAT(a.DEVELOP_DATE,"%Y-%m-%d") &lt;= DATE_FORMAT(#{developDateTo},"%Y-%m-%d")
	          	</if>
	          	<if test="industry != null and industry != ''">
	          	   and  a.INDUSTRY = #{industry}
	          	</if>
	          	<if test="responsiblePersonId != null and responsiblePersonId != ''">
	          	    and a.RESPONSIBLE_PERSON_ID = (select id from sys_user where id =  #{responsiblePersonId})
	          	</if>
	          	<if test="ifEffective !=null and ifEffective != ''">
	          	    and a.IF_EFFECTIVE = 1
	          	</if>
	          	<if test="ifImportant !=null and ifImportant != ''">
	          	    and a.IF_IMPORTANT = 1
	          	</if>
	          	<if test="officeId !=null and officeId != ''">
	          	    and a.ORGANIZE = #{officeId}
	          	</if>
	          	<if test="region != null and region != ''">
	          	    and a.REGION = #{region}
	          	</if>
				<if test="sqlMap != null and sqlMap.dataScope != null">
					AND a.RESPONSIBLE_PERSON_ID in ${sqlMap.dataScope}
				</if>
	      </where>
	      <choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.CUSTOMER_ID DESC
			</otherwise>
		</choose>
	</select>
	<select id="selectCustomerById" resultType="CustomerManagement">
	    	select 
	    	<include refid="editcustomerColumns"/>
	    	from CM_CUSTOMER_INFO a
	    	<where>
	    	    <if test="customerId != null and customerId != ''">
	    	        and a.CUSTOMER_ID = #{customerId}
	    	    </if>
	    	    <if test="customerChName != null and customerChName !=''">
			        and a.CUSTOMER_CH_NAME = #{customerChName}
			    </if>
	    	</where>
	    	
	</select>
	
	<insert id="saveOrUpdate">
	    <selectKey keyProperty="count" resultType="int" order="BEFORE">
	    	select count(*) from cm_customer_info where CUSTOMER_ID = #{customerId}
	  	</selectKey>
	  	<if test="count > 0">
	    	update cm_customer_info set
		    CREATE_DATE=#{createDate},
		    UPDATE_BY=#{updateId},
		    UPDATE_DATE = #{updateDate},
		    CUSTOMER_TYPE = #{customerType},
		    CUSTOMER_CH_NAME = #{customerChName},
		    DEVELOP_DATE = #{developDate},
		    IF_EFFECTIVE = #{ifEffective},
		    IF_IMPORTANT = #{ifImportant},
		    INDUSTRY = #{industry},
		    CUSTOMER_DIFF = #{customerDiff},
		    RESPONSIBLE_PERSON_ID = #{responsiblePersonId},
		    ORGANIZE = #{officeId},
		    REGION = #{region} ,
		    PROVINCE = #{province},
		    CITY = #{city},
		    ADDRESS = #{address},
		    CUSTOMER_PARENT_CO = #{customerParentCo},
		    AX_CUS_NO = #{axCusNo},
		    INVOICE_TYPE = #{invoiceType},
		    INVOICE_TITLE = #{invoiceTitle},
		    TAXPAYER_IDENT_NO = #{taxpayerIdentNo},
		    DEPOSIT_BANK = #{depositBank},
		    BANK_ACCOUNT = #{bankAccount},
		    INVOICE_ADDRESS = #{invoiceAddress},
		    TELEPHONE = #{telephone},
		    ZIP_CODE = #{zipCode}
		    where CUSTOMER_ID = #{customerId}
	  	</if>
	  	<if test="count==0">
	    	insert into cm_customer_info (
		    ID,PROC_INS_ID,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,DEL_FLAG,CUSTOMER_ID,
		    CUSTOMER_CH_NAME,CUSTOMER_PARENT_CO,CUSTOMER_TYPE,AX_CUS_NO,DEVELOP_DATE,LAST_VISIT_DATE,
		    IF_AGREEMENT,RESPONSIBLE_PERSON_ID,ORGANIZE,IF_IMPORTANT,IF_EFFECTIVE,INDUSTRY,CUSTOMER_DIFF,
		    REGION,PROVINCE,CITY,ADDRESS,INVOICE_TYPE,INVOICE_TITLE,TAXPAYER_IDENT_NO,DEPOSIT_BANK,BANK_ACCOUNT,
		    INVOICE_ADDRESS,TELEPHONE,ZIP_CODE)
		    values(
		    #{id},#{procInsId},#{createId},#{createDate},#{updateId},#{updateDate},#{delFlag},#{customerId},
		    #{customerChName},#{customerParentCo},#{customerType},#{axCusNo},#{developDate},#{lastVisitDate},
		    #{ifAgreement},#{responsiblePersonId},#{officeId},#{ifImportant},#{ifEffective},#{industry},#{customerDiff},
		    #{region},#{province},#{city},#{address},#{invoiceType},#{invoiceTitle},#{taxpayerIdentNo},#{depositBank},#{bankAccount},
		    #{invoiceAddress},#{telephone},#{zipCode}
		    )
	  	</if>
	</insert>
	
	<insert id="insertCustomer">
	    insert into cm_customer_info (
	    ID,PROC_INS_ID,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,DEL_FLAG,CUSTOMER_ID,
	    CUSTOMER_CH_NAME,CUSTOMER_PARENT_CO,CUSTOMER_TYPE,AX_CUS_NO,DEVELOP_DATE,LAST_VISIT_DATE,
	    IF_AGREEMENT,RESPONSIBLE_PERSON_ID,ORGANIZE,IF_IMPORTANT,IF_EFFECTIVE,INDUSTRY,CUSTOMER_DIFF,
	    REGION,PROVINCE,CITY,ADDRESS,INVOICE_TYPE,INVOICE_TITLE,TAXPAYER_IDENT_NO,DEPOSIT_BANK,BANK_ACCOUNT,
	    INVOICE_ADDRESS,TELEPHONE,ZIP_CODE)
	    values(
	    #{id},#{procInsId},#{createId},#{createDate},#{updateId},#{updateDate},#{delFlag},#{customerId},
	    #{customerChName},#{customerParentCo},#{customerType},#{axCusNo},#{developDate},#{lastVisitDate},
	    #{ifAgreement},#{responsiblePersonId},#{officeId},#{ifImportant},#{ifEffective},#{industry},#{customerDiff},
	    #{region},#{province},#{city},#{address},#{invoiceType},#{invoiceTitle},#{taxpayerIdentNo},#{depositBank},#{bankAccount},
	    #{invoiceAddress},#{telephone},#{zipCode}
	    )
	</insert>
	<update id="updateCustomer">
	    update cm_customer_info set
	    CREATE_DATE=#{createDate},
	    UPDATE_BY=#{updateId},
	    UPDATE_DATE#{updateDate},
	    CUSTOMER_TYPE = #{customerType},
	    CUSTOMER_CH_NAME = #{customerChName},
	    DEVELOP_DATE = #{developDate},
	    IF_EFFECTIVE = #{ifEffective},
	    IF_IMPORTANT = #{ifImportant},
	    INDUSTRY = #{industry},
	    CUSTOMER_DIFF = #{customerDiff},
	    RESPONSIBLE_PERSON_ID = #{responsiblePersonId},
	    ORGANIZE = #{officeId},
	    REGION = #{region} ,
	    PROVINCE = #{province},
	    CITY = #{city},
	    ADDRESS = #{address},
	    CUSTOMER_PARENT_CO = {customerParentCo},
	    AX_CUS_NO = #{axCusNo},
	    INVOICE_TYPE = #{invoiceType},
	    INVOICE_TITLE = #{invoiceTitle},
	    TAXPAYER_IDENT_NO = #{taxpayerIdentNo},
	    DEPOSIT_BANK = #{depositBank},
	    BANK_ACCOUNT = #{bankAccount},
	    INVOICE_ADDRESS = #{invoiceAddress},
	    TELEPHONE = #{telephone},
	    ZIP_CODE = #{zipCode}
	    where CUSTOMER_ID = #{customerId}
	</update>
	
	<insert id="insertAgreement" parameterType="java.util.List">
	    insert into CM_AGREEMENT
	    (ID,PROC_INS_ID,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,DEL_FLAG,
	    AGREEMENT_PATIES_ID,VALIDITY_DATE_FROM,VALIDITY_DATE_TO,NEW_REMARKS)
	    values
	    	<foreach collection="list" item="agreement" index="index" separator=",">
				(#{agreement.id},#{agreement.procInsId},#{agreement.createId},#{agreement.createDate},#{agreement.updateId},#{agreement.updateDate},#{agreement.delFlag},
		    	#{agreement.agreementId},#{agreement.validityDateFrom},#{agreement.validityDateTo},#{agreement.newRemarks})
			</foreach>
	</insert>
	
	<insert id="insertAgreementDtl" parameterType="java.util.List">
	     insert into CM_AGREEMENT_DTL
	     (ID,PROC_INS_ID,CREATE_BY,CREATE_DATE,UPDATE_BY,UPDATE_DATE,DEL_FLAG,
	     AGREEMENT_ID,LINE_NO,PERIOD,PERIOD_DATE_FROM,PERIOD_DATE_TO)
	     values
	     <foreach collection="list" item="dtl" index="index" separator=",">
				(#{dtl.id},#{dtl.procInsId},#{dtl.createId},#{dtl.createDate},#{dtl.updateId},#{dtl.updateDate},#{dtl.delFlag},
	     		#{dtl.agreementId},#{dtl.lineNo},#{dtl.period},#{dtl.periodDateFrom},#{dtl.periodDateTo})
		</foreach>
	</insert>
	<select id="selectAgreement" resultType="CmAgreement">
	    select ID as id,
	    DATE_FORMAT(VALIDITY_DATE_FROM,"%Y-%m-%d") as validityDateFrom,
	    DATE_FORMAT(VALIDITY_DATE_TO,"%Y-%m-%d") as validityDateTo,
	    NEW_REMARKS as newRemarks
	    from CM_AGREEMENT
	    where AGREEMENT_PATIES_ID = #{customer}
	</select>
	
	<select id="selectCustomerParent" resultType="CustomerManagement">
	    select CUSTOMER_ID as customerId,CUSTOMER_CH_NAME as customerChName
	    from cm_customer_info
	    where CUSTOMER_ID in(select CUSTOMER_PARENT_CO from cm_customer_info where CUSTOMER_PARENT_CO &lt;&gt;'')
	</select>
	
	<delete id="deleteAgreementBy">
	    delete from CM_AGREEMENT
	    where id = #{id}
	</delete>
	
	<delete id="deleteAgreement">
	    delete from CM_AGREEMENT
	    where AGREEMENT_PATIES_ID = #{customerId}
	</delete>
	
	<delete id="deleteAgreementDtl">
	    delete from cm_agreement_dtl
	    <where>
	        <if test="agreementId != null and agreementId != ''">
	            and AGREEMENT_ID = #{agreementId}
	        </if>
	        <if test="customerId != null and customerId !=''">
	             and AGREEMENT_ID in (select id from cm_agreement where AGREEMENT_PATIES_ID = #{customerId})
	        </if>
	    </where>
	</delete>
</mapper>
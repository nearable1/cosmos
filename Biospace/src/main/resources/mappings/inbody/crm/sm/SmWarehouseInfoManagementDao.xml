<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.sm.dao.SmWarehouseInfoManagementDao">
    

	<select id="selectByWarehouse" resultType="java.util.Map" >
	SELECT id,
		sn_no as snNo,
		material_no as materialNo,
		warehouse,
		storage_id as storageId,
		in_stock_status as inStockStatus,
		num,
		occupation_no as  occupationNo
		from sm_warehouse_info 
		WHERE warehouse=#{warehouse} and material_No=#{materialNo}
		<if test="id != null and id!=''">
         	and id = #{id}
        </if>
        ORDER BY IN_STOCK_STATUS 
	</select>
	<select id="selectAll" resultType="java.util.Map" >
		SELECT 
			w.id,
			w.MATERIAL_NO as materialNo,
			m.material_name as materialName,
			w.NUM as num,
			w.WAREHOUSE as warehouse,
			(select label from sys_dict WHERE type='DM0050' and value=w.WAREHOUSE ) as warehouseName,
			w.SN_NO as snNo,
			s.PRODUCTION_DATE as productionDate,
			m.model
		from sm_warehouse_info as w
			LEFT JOIN sm_sn_info as s ON w.SN_NO=s.SN_NO
			inner JOIN sm_mat_info as m ON w.MATERIAL_NO = m.MATERIAL_NO
		WHERE 1=1 and w.del_flag='0' and w.in_stock_status='1' and w.NUM!='0'
		<if test="materialNo != null and materialNo!=''">
         	 and w.MATERIAL_NO= #{materialNo}
        </if>
        <if test="snNo != null and snNo!=''">
         	 and w.SN_NO =#{snNo}
        </if> 
        <if test="materialName != null and materialName!=''">
         	and m.MATERIAL_NAME=#{materialName}
        </if>  
	
	</select>
	
	
	<select id="selectByWarehouseAndMaterialNo" resultType="java.util.Map">
		select * from sm_warehouse_info where MATERIAL_NO=#{materialNo} and WAREHOUSE=#{warehouse} ORDER BY IN_STOCK_STATUS 
	</select>
	
	<select id="selectByWid" resultType="java.util.Map">
		select * from sm_warehouse_info where id=#{Id}
	</select>
	
	
	
	
	
	<insert id="insert">
		INSERT INTO sm_warehouse_info(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			sn_no,
			material_no,
			warehouse,
			storage_id,
			in_stock_status,
			num,
			occupation_no
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{snNo},
			#{materialNo},
			#{warehouse},
			#{storageId},
			#{inStockStatus},
			#{num},
			#{occupationNo}
		)
	</insert>



	<insert id="insertBySelect">
	INSERT INTO sm_warehouse_info
		(ID,
		CREATE_BY,
		create_date,
		UPDATE_BY,
		UPDATE_DATE,
		DEL_FLAG,
		MATERIAL_NO,
		WAREHOUSE,
		STORAGE_ID,
		IN_STOCK_STATUS,
		NUM) 
		select 
		#{id},
		#{createBy.id},
		#{createDate},
		#{createBy.id},
		#{createDate},
		'0' AS DEL_FLAG,
		W.MATERIAL_NO,
		W.WAREHOUSE,
		#{storageId},
		#{inStockStatus},
		#{num} 
		from sm_warehouse_info AS W
		WHERE ID=#{newId}
	</insert>
	
	
	
	<update id="update">
		UPDATE sm_warehouse_info SET
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate},
			storage_id=#{storageId}
		<if test="warehouse != null and warehouse!=''">
         	,warehouse = #{warehouse}
        </if>
		<if test="num != null and num!=''">
           ,num = #{num}
        </if>
			WHERE id = #{id}
	</update>
	
	<update id="updateStock">
	UPDATE sm_warehouse_info SET
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate},
		<choose>
   		 	  <when test="inStockStatus!='' and inStockStatus!=null">
       				in_stock_status = #{inStockStatus}
  			  </when>
   			  <otherwise>
       				in_stock_status = '3'
   			  </otherwise>
  	 	</choose>
			where  sn_no= #{snNo}
	
	</update>
	
	<update id="updateByNum">
		UPDATE sm_warehouse_info SET
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate},
			num=#{num}
			where ID=#{id}
	</update>

	<update id="updateSnNo">
		update SM_SN_INFO  set 
		UPDATE_BY=#{name},
		UPDATE_DATE=#{data},
		order_no=NULL,
		line_no=NULL,
		warranty_date_to = NULL,
		<if test="lineNo != null and lineNo!=''">
         	old_line_no=#{lineNo},  
        </if>
		old_order_no=#{orderNo} where sn_no=#{SN_NO}
	</update>
	
	<update id="updateStockBySnNo">
		update sm_warehouse_info  set UPDATE_BY=#{name},UPDATE_DATE=#{data}, 
		in_stock_status=#{inStockStatus} where sn_no=#{NEW_SN_NO}
	</update>
	
	
	<update id="updateNewSnNo">
	update SM_SN_INFO  
		set UPDATE_BY=#{name},
		UPDATE_DATE=#{data},  
		order_no=#{orderNo},
		<if test="lineNo != null and lineNo!=''">
         	line_no=#{lineNo},  
        </if>
		storage_id=#{storageId},
		warranty_date_from=#{data},
		warranty_date_to=#{LENDING_DATE_TO}   
	where  sn_no=#{NEW_SN_NO}
	</update>
	
	<update id="updateBySn">
			UPDATE sm_warehouse_info SET
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate},
			storage_id=#{storageId}
		<if test="warehouse != null and warehouse!=''">
         	,warehouse = #{warehouse}
        </if>
		<if test="num != null and num!=''">
           ,num = #{num}
        </if>
        <if test="inStockStatus != null and inStockStatus!=''">
           ,in_stock_status = #{inStockStatus}
        </if>
        
			WHERE SN_NO = #{snNo}
	</update>
	
	<update id="updateSnBySn">
			UPDATE sm_sn_info SET
			UPDATE_BY = #{updateBy.id},
			UPDATE_DATE = #{updateDate},
         	warehouse = #{warehouse}
			WHERE SN_NO = #{snNo}
	</update>

	<update id="delete">
		UPDATE sm_warehouse_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.sm.tm.dao.TmTestingDao">
    
	<sql id="tmTestingColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.testing_no AS "testingNo",
		a.testing_type AS "testingType",
		a.testing_date AS "testingDate",
		a.testing_person_id AS "testingPersonId",
		a.stocking_date AS "stockingDate",
		a.check_person_id AS "checkPersonId",
		a.testing_result AS "testingResult",
		a.if_prime_problem AS "ifPrimeProblem",
		a.new_remarks AS "newRemarks"
	</sql>
	
	<sql id="tmTestingJoinColumns">
		c.material_no AS "materialNo",
		d.model AS "model",
		c.sn_no AS "snNo",
		c.machine_type AS "machineType",
		c.production_date AS "productionDate",
		c.status AS "status",
		b.line_no AS "lineNo",
		b.if_packing_good AS "ifPackingGood",
		b.if_outlook_good AS "ifOutlookGood",
		b.additional_instructions AS "additionalInstructions",
		b.new_remarks AS "detailNewRemarks",
		u.name AS "testingPersonName"
	</sql>
	
	<sql id="tmTestingJoins">
	    left join tm_testing_dtl b
        ON b.sn_no = c.sn_no
		and b.del_flag = #{DEL_FLAG_NORMAL}
	    left join tm_testing a
	    ON b.testing_no = a.testing_no
		and a.del_flag = #{DEL_FLAG_NORMAL}
        inner join sm_mat_info d
        on c.material_no = d.material_no
        LEFT JOIN sys_user u
        on a.TESTING_PERSON_ID = u.id
	</sql>
    
	<select id="get" resultType="TmTesting">
		SELECT 
			<include refid="tmTestingColumns"/>
		FROM tm_testing a
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TmTesting">
		SELECT
		    <include refid="tmTestingJoinColumns"/>,
			<include refid="tmTestingColumns"/>
		FROM sm_sn_info c
		<include refid="tmTestingJoins"/>
		<where>
			c.del_flag = #{DEL_FLAG_NORMAL}
			<if test="testingDateFromSearch != null and testingDateFromSearch != ''">
				AND a.testing_date &gt;= #{testingDateFromSearch}
			</if>
			<if test="testingDateToSearch != null and testingDateToSearch != ''">
				AND a.testing_date &lt;= #{testingDateToSearch}
			</if>
			<if test="snNoSearch != null and snNoSearch != ''">
				AND c.sn_no like CONCAT(CONCAT('%',#{snNoSearch}),'%')
			</if>
			<if test="materialNoSearch != null and materialNoSearch != ''">
				AND d.model like CONCAT(CONCAT('%',#{materialNoSearch}),'%') 
			</if>
			<if test="statusSearch != null and statusSearch != ''">
				AND c.status = #{statusSearch}
			</if>
			<if test="machineTypeSearch != null and machineTypeSearch != ''">
				AND c.machine_type = #{machineTypeSearch}
			</if>
			<if test="testingTypeSearch != null and testingTypeSearch != ''">
				AND a.testing_type = #{testingTypeSearch}
			</if>
			<if test="testingResultSearch != null and testingResultSearch != ''">
				AND a.testing_result = #{testingResultSearch}
			</if>
			<if test="additionalInstructionsSearch != null and additionalInstructionsSearch != ''">
				AND b.additional_instructions = #{additionalInstructionsSearch}
			</if>
			<if test="ifPrimeProblemSearch != null and ifPrimeProblemSearch != ''">
				AND a.if_prime_problem = #{ifPrimeProblemSearch}
			</if>
			<!-- <if test="sqlMap != null and sqlMap.dataScope != null">
			    AND (CASE WHEN a.create_by is not null THEN a.create_by END in ${sqlMap.dataScope})
		    </if> -->
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.testing_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findPageLatest" resultType="TmTesting">
		select 
            c.material_no AS "materialNo",
			d.model AS "model",
			c.sn_no AS "snNo",
			c.machine_type AS "machineType",
			c.production_date AS "productionDate",
			c.status AS "status",
			b.id AS "id",
			b.proc_ins_id AS "procInsId",
			b.create_by AS "createBy.id",
			b.create_date AS "createDate",
			b.update_by AS "updateBy.id",
			b.update_date AS "updateDate",
			b.del_flag AS "delFlag",
			b.testing_no AS "testingNo",
			b.testing_type AS "testingType",
			b.testing_date AS "testingDate",
			b.testing_person_id AS "testingPersonId",
		    u.name AS "testingPersonName",
			b.stocking_date AS "stockingDate",
			b.check_person_id AS "checkPersonId",
			b.testing_result AS "testingResult",
			b.if_prime_problem AS "ifPrimeProblem",
			b.line_no AS "lineNo",
			b.if_packing_good AS "ifPackingGood",
			b.if_outlook_good AS "ifOutlookGood",
			b.additional_instructions AS "additionalInstructions",
			b.new_remarks AS "detailNewRemarks"
		from sm_sn_info c
		left join (select t2.SN_NO,
						MAX(t1.id) AS id,
						MAX(t1.proc_ins_id) AS proc_ins_id,
						MAX(t1.create_by) AS create_by,
						MAX(t1.create_date) AS create_date,
						MAX(t1.update_by) AS update_by,
						MAX(t1.update_date) AS update_date,
						MAX(t1.del_flag) AS del_flag,
						MAX(t1.testing_no) AS testing_no,
						MAX(t1.testing_type) AS testing_type,
						MAX(t1.testing_date) AS testing_date,
						MAX(t1.testing_person_id) AS testing_person_id,
						MAX(t1.stocking_date) AS stocking_date,
						MAX(t1.check_person_id) AS check_person_id,
						MAX(t1.testing_result) AS testing_result,
						MAX(t1.if_prime_problem) AS if_prime_problem,
			            MAX(t2.line_no) AS line_no,
			            MAX(t2.if_packing_good) AS if_packing_good,
			            MAX(t2.if_outlook_good) AS if_outlook_good,
			            MAX(t2.additional_instructions) AS additional_instructions,
			            MAX(t2.new_remarks) AS new_remarks
        from tm_testing t1
		inner join tm_testing_dtl t2
		on t1.TESTING_NO = t2.TESTING_NO
		and t2.del_flag = #{DEL_FLAG_NORMAL}
		and t1.del_flag = #{DEL_FLAG_NORMAL}
		inner join (
            select tm2.SN_NO,max(tm1.TESTING_NO) as TESTING_NO
	        from tm_testing tm1
			inner join tm_testing_dtl tm2
			on tm1.TESTING_NO = tm2.TESTING_NO
			and tm2.del_flag = #{DEL_FLAG_NORMAL}
			and tm1.del_flag = #{DEL_FLAG_NORMAL}
			inner join (select b.SN_NO,max(a.TESTING_DATE) as TESTING_DATE from tm_testing a
					inner join tm_testing_dtl b
					on a.TESTING_NO = b.TESTING_NO
					group by b.SN_NO) tm3
			on tm2.SN_NO = tm3.SN_NO
			and tm1.TESTING_DATE = tm3.TESTING_DATE
	        group by tm2.SN_NO
        ) t3
		on t2.SN_NO = t3.SN_NO
		and t1.TESTING_NO = t3.TESTING_NO
		GROUP BY t2.SN_NO) b
        on c.SN_NO = b.sn_no
        inner join sm_mat_info d
        on c.material_no = d.material_no
        LEFT JOIN sys_user u
        on b.TESTING_PERSON_ID = u.id
		<where>
			c.del_flag = #{DEL_FLAG_NORMAL}
			<if test="testingDateFromSearch != null and testingDateFromSearch != ''">
				AND b.testing_date &gt;= #{testingDateFromSearch}
			</if>
			<if test="testingDateToSearch != null and testingDateToSearch != ''">
				AND b.testing_date &lt;= #{testingDateToSearch}
			</if>
			<if test="snNoSearch != null and snNoSearch != ''">
				AND c.sn_no like CONCAT(CONCAT('%',#{snNoSearch}),'%') 
			</if>
			<if test="materialNoSearch != null and materialNoSearch != ''">
				AND d.model like CONCAT(CONCAT('%',#{materialNoSearch}),'%') 
			</if>
			<if test="statusSearch != null and statusSearch != ''">
				AND c.status = #{statusSearch}
			</if>
			<if test="machineTypeSearch != null and machineTypeSearch != ''">
				AND c.machine_type = #{machineTypeSearch}
			</if>
			<if test="testingTypeSearch != null and testingTypeSearch != ''">
				AND b.testing_type = #{testingTypeSearch}
			</if>
			<if test="testingResultSearch != null and testingResultSearch != ''">
				AND b.testing_result = #{testingResultSearch}
			</if>
			<if test="additionalInstructionsSearch != null and additionalInstructionsSearch != ''">
				AND b.additional_instructions = #{additionalInstructionsSearch}
			</if>
			<if test="ifPrimeProblemSearch != null and ifPrimeProblemSearch != ''">
				AND b.if_prime_problem = #{ifPrimeProblemSearch}
			</if>
			<!-- <if test="sqlMap != null and sqlMap.dataScope != null">
			    AND (CASE WHEN b.create_by is not null THEN b.create_by END in ${sqlMap.dataScope})
		    </if> -->
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY b.testing_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TmTesting">
		SELECT 
			<include refid="tmTestingColumns"/>
		FROM tm_testing a
		<include refid="tmTestingJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.testing_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tm_testing(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			testing_no,
			testing_type,
			testing_date,
			stocking_date,
			testing_person_id,
			check_person_id,
			testing_result,
			if_prime_problem,
			new_remarks
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{testingNo},
			#{testingType},
			#{testingDate},
			#{stockingDate},
			#{testingPersonId},
			#{checkPersonId},
			#{testingResult},
			#{ifPrimeProblem},
			#{newRemarks}
		)
	</insert>
	
	<update id="update">
		UPDATE tm_testing SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			testing_no = #{testingNo},
			testing_type = #{testingType},
			testing_date = #{testingDate},
			stocking_date = #{stockingDate},
			testing_person_id = #{testingPersonId},
			check_person_id = #{checkPersonId},
			testing_result = #{testingResult},
			if_prime_problem = #{ifPrimeProblem},
			new_remarks = #{newRemarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE tm_testing SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="findSnInfoList" resultType="SnInfo">
		SELECT 
			a.id AS "id",
			a.proc_ins_id AS "procInsId",
			a.create_by AS "createBy.id",
			a.create_date AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_date AS "updateDate",
			a.del_flag AS "delFlag",
			a.sn_no AS "snNo",
			a.sn_version AS "snVersion",
			a.material_no AS "materialNo",
			a.storage_id AS "storageId",
			a.warehouse AS "warehouse",
			a.production_date AS "productionDate",
			a.entry_date AS "entryDate",
			a.machine_type AS "machineType",
			a.status AS "status",
			a.warranty_date_from AS "warrantyDateFrom",
			a.warranty_date_to AS "warrantyDateTo",
			a.if_install AS "ifInstall",
			a.install_person_id AS "installPersonId",
			a.latest_install_date AS "latestInstallDate",
			a.actual_install_date AS "actualInstallDate",
			a.purchase_no AS "purchaseNo",
			a.order_no AS "orderNo",
			a.line_no AS "lineNo",
			a.old_order_no AS "oldOrderNo",
			a.old_line_no AS "oldLineNo"
		FROM sm_sn_info a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        and a.material_no = #{materialNo}
        and a.sn_no = #{snNo}
	</select>
	
	<select id="hasSnwarehouseInfo" resultType="java.lang.Integer">
		SELECT count(1)
		FROM sm_warehouse_info a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        and a.SN_NO = #{snNo}
        and a.IN_STOCK_STATUS = 1
	</select>
	
	<update id="updateSnInfo">
		UPDATE sm_sn_info SET 
			STATUS = #{status},
			SN_VERSION = #{snVersion}
		WHERE SN_NO = #{snNo}
	</update>
</mapper>
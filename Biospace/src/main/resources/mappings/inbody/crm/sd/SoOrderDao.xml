<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.sd.dao.SoOrderDao">
    
	<sql id="soOrderColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.order_no AS "orderNo",
		a.business_opp_no AS "businessOppNo",
		a.order_type AS "orderType",
		a.order_date AS "orderDate",
		a.price_system AS "priceSystem",
		a.receipt_type AS "receiptType",
		a.receipt_remarks AS "receiptRemarks",
		a.paymaent_con AS "paymaentCon",
		a.condition_remarks AS "conditionRemarks",
		a.employee_no AS "employeeNo",
		a.city AS "city",
		a.customer_id AS "customerId",
		a.customer_ch_name AS "customerChName",
		a.currency AS "currency",
		a.exchange_rate AS "exchangeRate",
		a.commission AS "commission",
		a.workflow_status AS "workflowStatus",
		a.receive_status AS "receiveStatus",
		a.invoice_status AS "invoiceStatus",
		a.deliver_status AS "deliverStatus",
		a.new_remarks AS "newRemarks",
		a.if_effective AS "ifEffective"
	</sql>
    
	<select id="getSoOrderInfo" resultType="SoOrder">
		SELECT 
			su.name AS "createBy.name",
			sue.name AS "employeeName",
			<include refid="soOrderColumns"/>
		FROM so_order a
		LEFT JOIN sys_user su ON a.create_by = su.id
		LEFT JOIN sys_user sue ON a.employee_no = sue.id
		WHERE a.id = #{id} AND a.del_flag != '1'
	</select>
    
	<select id="getDeliverInfoByOrderNo" resultType="com.inbody.crm.sd.entity.SoOrder">
		SELECT 
			<include refid="soOrderColumns"/>
		FROM so_order a
		WHERE a.order_no = #{orderNo} AND a.deliver_status != '30' AND a.del_flag = '0' AND a.workflow_status = '50'
			AND NOT EXISTS (SELECT so.order_no FROM so_order so WHERE so.order_no = a.order_no AND so.del_flag = '2' AND so.workflow_status != '50')
		<if test="sqlMap != null and sqlMap.dataScope != null">
			AND (a.create_by in ${sqlMap.dataScope} OR a.employee_no in ${sqlMap.dataScope})
		</if>
	</select>
    
	<select id="getEffectiveInfoByOrderNo" resultType="SoOrder">
		SELECT 
			<include refid="soOrderColumns"/>
		FROM so_order a
		WHERE a.order_no = #{orderNo} AND a.del_flag = '0' AND a.if_effective = '1' limit 1
	</select>
    
	<select id="getApplyingInfoByOrderNo" resultType="SoOrder">
		SELECT 
			<include refid="soOrderColumns"/>
		FROM so_order a
		WHERE a.order_no = #{orderNo} AND (a.workflow_status != '50' AND a.workflow_status != '70') AND a.del_flag != '1'
	</select>
    
	<select id="getReSoOrderInfo" resultType="SoOrder">
		SELECT 
			su.name AS "employeeName",
			<include refid="soOrderColumns"/>
		FROM so_order a
		LEFT JOIN sys_user su ON a.employee_no = su.id
		WHERE a.receive_status != '30'
			AND (invoice_status in ('20','30') OR deliver_status in ('20','30'))
			AND a.del_flag = '0'
			AND a.if_effective = '1'
	</select>
    
	<select id="getMaxStorageProcessDate" resultType="java.lang.String">
		SELECT 
			MAX(process_date)
		FROM sm_storage_info a
		WHERE a.order_no = #{orderNo}
			AND a.storage_type = '21'
			AND a.del_flag = '0'
	</select>
    
	<select id="getMaxInstallDate" resultType="java.lang.String">
		SELECT 
			MAX(a.actual_install_date)
		FROM SM_SN_INFO a
		INNER JOIN sm_storage_info ssi ON a.storage_id = ssi.storage_id
			AND a.sn_no = ssi.sn_no
			AND a.material_no = ssi.material_no
			AND ssi.order_no = ''
			AND ssi.storage_type = '21'
			AND ssi.del_flag = '0'
	</select>
    
	<select id="getReRmRepairInfoList" resultType="com.inbody.crm.sd.entity.SoRmRepairInfo">
		SELECT 
			rq.quotation_no AS "quotationNo",
			rq.invoice_status AS "invoiceStatus",
			rri.repair_no AS "repairNo",
			rri.process_date AS "processDate",
			rri.repair_cus_name AS "repairCusName",
			su.name AS "responsiblePersonName"
		FROM RM_REPAIR_INFO rri
		LEFT JOIN sys_user su ON rri.responsible_person_id = su.id
		INNER JOIN RM_QUOTATION  rq ON rq.repair_no = rri.repair_no
			AND rq.receive_status != '30'
		WHERE
			rri.repair_status = '3'
			AND rri.del_flag = '0'
	</select>
    
	<select id="getReRmQuotationDtl" resultType="com.inbody.crm.sd.entity.SoRmQuotationDtl">
		SELECT 
			a.id AS "id",
			a.proc_ins_id AS "procInsId",
			a.create_by AS "createBy.id",
			a.create_date AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_date AS "updateDate",
			a.del_flag AS "delFlag",
			a.quotation_no AS "quotationNo",
			a.line_no AS "lineNo",
			a.repair_no AS "repairNo",
			a.item_type AS "itemType",
			a.material_no AS "materialNo",
			a.new_sn_no AS "newSnNo",
			a.sn_no AS "snNo",
			a.unit_price AS "unitPrice",
			a.num AS "num",
			a.total_amount AS "totalAmount",
			a.if_warranty AS "ifWarranty",
			a.act_amount AS "actAmount",
			a.if_purchase AS "ifPurchase",
			smi.model AS "model"
		FROM rm_quotation_dtl a
		LEFT JOIN sm_mat_info smi ON smi.material_no = a.material_no
		WHERE a.quotation_no = #{quotationNo}
			AND a.del_flag = '0'
	</select>
	
	
	<!-- 合同查询画面，合同list分页查询 -->
	<!-- <select id="findPageList" resultType="SoOrderSearch">
		SELECT
			su.name AS "employeeName",
			sa.name AS "cityName",
			<include refid="soOrderColumns"/>
		FROM so_order a
		LEFT JOIN sys_user su ON a.employee_no = su.id
		LEFT JOIN sys_area sa ON a.city = sa.code
		<if test="region != null and region != ''">
		INNER JOIN 
		(SELECT sodc.order_id AS order_id 
			FROM so_order_dtl sodc 
			INNER JOIN cm_customer_info ccit ON sodc.end_customer_id = ccit.customer_id AND ccit.region = #{region}
			GROUP BY sodc.order_id
		) sodct
		ON sodct.order_id = a.id
		</if>
		<if test="endCustomerId != null and endCustomerId != ''">
		INNER JOIN (
			SELECT sode.order_id AS order_id
			FROM
				so_order_dtl sode WHERE sode.end_customer_id  = #{endCustomerId}
			GROUP BY sode.order_id
		) sodet
		ON sodet.order_id = a.id
		</if>
		<if test="materialName != null and materialName != ''">
		INNER JOIN 
		(SELECT sodm.order_id AS order_id 
			FROM so_order_dtl sodm 
			INNER JOIN sm_mat_info smi ON (sodm.material_no = smi.material_no OR sodm.package_mertiral_no = smi.material_no)
			AND (smi.material_name like CONCAT(CONCAT('%', #{materialName}), '%') OR smi.model like CONCAT(CONCAT('%', #{materialName}), '%'))
			GROUP BY sodm.order_id
		) sodmt
		ON sodmt.order_id = a.id
		</if>
		<where>
			<if test="orderNo != null and orderNo != ''">
				AND a.order_no like CONCAT(CONCAT('%', #{orderNo}), '%')
			</if>
			<if test="orderDateBegin != null and orderDateBegin != ''">
				AND a.order_date >= #{orderDateBegin}
			</if>
			<if test="orderDateEnd != null and orderDateEnd != ''">
				AND #{orderDateEnd} >= a.order_date
			</if>
			<if test="orderType != null and orderType != ''">
				AND a.order_type = #{orderType}
			</if>
			<if test="employeeNo != null and employeeNo != ''">
				AND a.employee_no = #{employeeNo}
			</if>
			<if test="customerId != null and customerId != ''">
				AND a.customer_id = #{customerId}
			</if>
			<if test="workflowStatus == '50'">
				AND a.workflow_status = #{workflowStatus} AND a.del_flag = '0'
				AND NOT EXISTS (SELECT so.order_no FROM so_order so WHERE so.order_no = a.order_no AND so.del_flag = '2' AND so.workflow_status != '50')
			</if>
			<if test="workflowStatus == '10'">
				AND a.workflow_status IN ('10', '20', '30', '40') AND (a.del_flag = '0' OR a.del_flag = '2')
			</if>
			<if test="receiveStatus != null and receiveStatus != ''">
				AND a.receive_status = #{receiveStatus}
			</if>
			<if test="invoiceStatus != null and invoiceStatus != ''">
				AND a.invoice_status = #{invoiceStatus}
			</if>
			<if test="deliverStatus != null and deliverStatus != ''">
				AND a.deliver_status = #{deliverStatus}
			</if>
			<if test="sqlMap != null and sqlMap.dataScope != null">
				AND (a.create_by in ${sqlMap.dataScope} OR a.employee_no in ${sqlMap.dataScope})
			</if>
		</where>
		ORDER BY a.order_date DESC, a.order_no DESC
	</select> -->
	<select id="findPageList" resultType="SoOrderSearch">
		SELECT
			su.name AS "employeeName",
			sa.name AS "cityName",
			ccit.region AS "region",
			ccit.customer_ch_name AS "endCustomerName",
			CONCAT(smi.material_name, " ", smi.model) AS "materialName",
			smi.model AS "model",
			ccit.industry AS "industry",
			ccit.customer_diff AS "customerDiff",
			sod.customer_segmentation AS "customerSegmentation",
			sod.num AS "num",
			sod.total_amount AS "totalAmount",
			sod.warranty_period AS "warrantyPeriod",
			susod.name AS "responsiblePersonName",
			iid.INVOICE_DATE AS "invoiceDate",
			<include refid="soOrderColumns"/>
		FROM so_order a
		INNER JOIN so_order_dtl sod ON sod.order_id = a.id
		LEFT JOIN cm_customer_info ccit ON sod.end_customer_id = ccit.customer_id
		LEFT JOIN sm_mat_info smi ON sod.material_no = smi.material_no
		LEFT JOIN sys_user su ON a.employee_no = su.id
		LEFT JOIN sys_area sa ON a.city = sa.code
		LEFT JOIN sys_user susod ON sod.responsible_person_id = susod.id
		LEFT JOIN (SELECT order_no, LINE_NO, MAX(INVOICE_DATE) AS INVOICE_DATE FROM im_invoice_dtl GROUP BY order_no, LINE_NO) iid
			ON a.order_no = iid.order_no AND sod.LINE_NO = iid.LINE_NO
		<where>
			<if test="orderNo != null and orderNo != ''">
				AND a.order_no like CONCAT(CONCAT('%', #{orderNo}), '%')
			</if>
			<if test="orderDateBegin != null and orderDateBegin != ''">
				AND a.order_date >= #{orderDateBegin}
			</if>
			<if test="orderDateEnd != null and orderDateEnd != ''">
				AND #{orderDateEnd} >= a.order_date
			</if>
			<if test="orderType != null and orderType != ''">
				AND a.order_type = #{orderType}
			</if>
			<if test="employeeNo != null and employeeNo != ''">
				AND a.employee_no = #{employeeNo}
			</if>
			<if test="customerId != null and customerId != ''">
				AND a.customer_id = #{customerId}
			</if>
			<if test="workflowStatus == '50'">
				AND a.workflow_status = #{workflowStatus} AND a.del_flag = '0'
				AND NOT EXISTS (SELECT so.order_no FROM so_order so WHERE so.order_no = a.order_no AND so.del_flag = '2' AND so.workflow_status != '50')
			</if>
			<if test="workflowStatus == '10'">
				AND a.workflow_status IN ('10', '20', '30', '40') AND (a.del_flag = '0' OR a.del_flag = '2')
			</if>
			<if test="receiveStatus != null and receiveStatus != ''">
				AND a.receive_status = #{receiveStatus}
			</if>
			<if test="invoiceStatus != null and invoiceStatus != ''">
				AND a.invoice_status = #{invoiceStatus}
			</if>
			<if test="deliverStatus != null and deliverStatus != ''">
				AND a.deliver_status = #{deliverStatus}
			</if>
			<if test="endCustomerId != null and endCustomerId != ''">
				AND sod.end_customer_id  = #{endCustomerId}
			</if>
			<if test="materialName != null and materialName != ''">
				AND (smi.material_name like CONCAT(CONCAT('%', #{materialName}), '%') OR smi.model like CONCAT(CONCAT('%', #{materialName}), '%'))
			</if>
			<if test="region != null and region != ''">
				AND ccit.region = #{region}
			</if>
			<if test="sqlMap != null and sqlMap.dataScope != null">
				AND (a.create_by in ${sqlMap.dataScope} OR a.employee_no in ${sqlMap.dataScope})
			</if>
		</where>
		ORDER BY a.order_date DESC, a.order_no DESC
	</select>
	
	<update id="updateDelFlag">
		UPDATE so_order SET 	
			update_date = #{updateDate},
			if_effective = #{ifEffective},
			del_flag = #{delFlag}
		WHERE id = #{id}
	</update>
    
	<sql id="smWarehouseInfoColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.sn_no AS "snNo",
		a.material_no AS "materialNo",
		a.warehouse AS "warehouse",
		a.storage_id AS "storageId",
		a.in_stock_status AS "inStockStatus",
		a.num AS "num",
		a.occupation_no AS "occupationNo"
	</sql>
    
	<select id="getSmWarehouseInfo" resultType="OrderSmWarehouseInfo">
		SELECT 
			<include refid="smWarehouseInfoColumns"/>
		FROM sm_warehouse_info a
		WHERE a.del_flag = '0'
		<if test="materialNo != null and materialNo != ''">
			AND a.material_no = #{materialNo}
		</if>
		<if test="snNo != null and snNo != ''">
			AND a.sn_no = #{snNo}
		</if>
		<if test="warehouse != null and warehouse != ''">
			AND a.warehouse = #{warehouse}
		</if>
		<if test="inStockStatus != null and inStockStatus != ''">
			AND a.in_stock_status = #{inStockStatus}
		</if>
	</select>

	<sql id="smSnInfoColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.sn_no AS "snNo",
		a.material_no AS "materialNo",
		a.sn_version AS "snVersion",
		a.lb_sn_no AS "lbSnNo",
		a.storage_id AS "storageId",
		a.warehouse AS "warehouse",
		a.production_date AS "productionDate",
		a.entry_date AS "entryDate",
		a.machine_type AS "machineType",
		a.status AS "status",
		a.warranty_date_from AS "warrantyDateFrom",
		a.warranty_date_to AS "warrantyDateTo",
		a.if_install AS "ifInstall",
		a.if_locked AS "ifLocked",
		a.install_person_id AS "installPersonId",
		a.latest_install_date AS "latestInstallDate",
		a.actual_install_date AS "actualInstallDate",
		a.purchase_no AS "purchaseNo",
		a.order_no AS "orderNo",
		a.line_no AS "lineNo",
		a.old_order_no AS "oldOrderNo",
		a.old_line_no AS "oldLineNo"
	</sql>
    
	<select id="getSmSnInfo" resultType="OrderSmSnInfo">
		SELECT 
			<include refid="smSnInfoColumns"/>
		FROM sm_sn_info a
		WHERE a.del_flag = '0'
		<if test="materialNo != null and materialNo != ''">
			AND a.material_no = #{materialNo}
		</if>
		<if test="snNo != null and snNo != ''">
			AND a.sn_no = #{snNo}
		</if>
	</select>
	
	<insert id="insertSmStorageInfo">
		INSERT INTO sm_storage_info(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			storage_id,
			storage_apply_id,
			storage_type,
			purchase_no,
			order_no,
			line_no,
			sn_no,
			material_no,
			num,
			warehouse,
			process_date,
			responsible_person_id,
			new_remarks,
			lending_type,
			industry,
			express_no,
			address,
			contacts_name,
			express_company,
			telephone,
			accessories_remarks,
			lending_date_from,
			lending_date_to,
			customer_name,
			if_install,
			install_person_id,
			latest_install_date,
			actual_install_date
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{storageId},
			#{storageApplyId},
			#{storageType},
			#{purchaseNo},
			#{orderNo},
			#{lineNo},
			#{snNo},
			#{materialNo},
			#{num},
			#{warehouse},
			#{processDate},
			#{responsiblePersonId},
			#{newRemarks},
			#{lendingType},
			#{industry},
			#{expressNo},
			#{address},
			#{contactsName},
			#{expressCompany},
			#{telephone},
			#{accessoriesRemarks},
			#{lendingDateFrom},
			#{lendingDateTo},
			#{customerName},
			#{ifInstall},
			#{installPersonId},
			#{latestInstallDate},
			#{actualInstallDate}
		)
	</insert>
	
	<update id="updateSmSnInfo">
		UPDATE sm_sn_info SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			sn_no = #{snNo},
			material_no = #{materialNo},
			sn_version = #{snVersion},
			lb_sn_no = #{lbSnNo},
			storage_id = #{storageId},
			warehouse = #{warehouse},
			production_date = #{productionDate},
			entry_date = #{entryDate},
			machine_type = #{machineType},
			status = #{status},
			warranty_date_from = #{warrantyDateFrom},
			warranty_date_to = #{warrantyDateTo},
			if_install = #{ifInstall},
			if_locked = #{ifLocked},
			install_person_id = #{installPersonId},
			latest_install_date = #{latestInstallDate},
			actual_install_date = #{actualInstallDate},
			purchase_no = #{purchaseNo},
			order_no = #{orderNo},
			line_no = #{lineNo},
			old_order_no = #{oldOrderNo},
			old_line_no = #{oldLineNo}
		WHERE id = #{id}
	</update>
	
	<update id="updateSmWarehouseInfo">
		UPDATE sm_warehouse_info SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			sn_no = #{snNo},
			material_no = #{materialNo},
			warehouse = #{warehouse},
			storage_id = #{storageId},
			in_stock_status = #{inStockStatus},
			num = #{num},
			occupation_no = #{occupationNo}
		WHERE id = #{id}
	</update>
	
	<sql id="soOrderJoins">
	</sql>
    
	<select id="get" resultType="SoOrder">
		SELECT 
			<include refid="soOrderColumns"/>
		FROM so_order a
		<include refid="soOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SoOrder">
		SELECT 
			<include refid="soOrderColumns"/>
		FROM so_order a
		<include refid="soOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SoOrder">
		SELECT 
			<include refid="soOrderColumns"/>
		FROM so_order a
		<include refid="soOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO so_order(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			order_no,
			business_opp_no,
			order_type,
			order_date,
			price_system,
			receipt_type,
			receipt_remarks,
			paymaent_con,
			condition_remarks,
			employee_no,
			city,
			customer_id,
			customer_ch_name,
			currency,
			exchange_rate,
			commission,
			workflow_status,
			receive_status,
			invoice_status,
			deliver_status,
			new_remarks,
			if_effective
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{orderNo},
			#{businessOppNo},
			#{orderType},
			#{orderDate},
			#{priceSystem},
			#{receiptType},
			#{receiptRemarks},
			#{paymaentCon},
			#{conditionRemarks},
			#{employeeNo},
			#{city},
			#{customerId},
			#{customerChName},
			#{currency},
			#{exchangeRate},
			#{commission},
			#{workflowStatus},
			#{receiveStatus},
			#{invoiceStatus},
			#{deliverStatus},
			#{newRemarks},
			#{ifEffective}
		)
	</insert>
	
	<update id="update">
		UPDATE so_order SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			order_no = #{orderNo},
			business_opp_no = #{businessOppNo},
			order_type = #{orderType},
			order_date = #{orderDate},
			price_system = #{priceSystem},
			receipt_type = #{receiptType},
			receipt_remarks = #{receiptRemarks},
			paymaent_con = #{paymaentCon},
			condition_remarks = #{conditionRemarks},
			employee_no = #{employeeNo},
			city = #{city},
			customer_id = #{customerId},
			customer_ch_name = #{customerChName},
			currency = #{currency},
			exchange_rate = #{exchangeRate},
			commission = #{commission},
			workflow_status = #{workflowStatus},
			receive_status = #{receiveStatus},
			invoice_status = #{invoiceStatus},
			deliver_status = #{deliverStatus},
			new_remarks = #{newRemarks},
			if_effective = #{ifEffective}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE so_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>
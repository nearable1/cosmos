<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.sd.dao.SoApplyDeliverDao">
    
	<sql id="soApplyDeliverColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.order_no AS "orderNo",
		a.expect_date AS "expectDate",
		a.workflow_status AS "workflowStatus",
		a.if_out AS "ifOut"
	</sql>
	
	<sql id="soApplyDeliverJoins">
	</sql>
    
	<select id="get" resultType="com.inbody.crm.sd.entity.SoApplyDeliver">
		SELECT 
			<include refid="soApplyDeliverColumns"/>
		FROM so_apply_deliver a
		<include refid="soApplyDeliverJoins"/>
		WHERE a.id = #{id}
	</select>
    
	<select id="getSoApplyDeliverInfo" resultType="com.inbody.crm.sd.entity.SoApplyDeliver">
		SELECT 
			temp.order_id AS "orderId",
			temp.customer_ch_name AS "customerName",
			temp.invoice_status AS "invoiceStatus",
			temp.receive_status AS "receiveStatus",
			<include refid="soApplyDeliverColumns"/>
		FROM so_apply_deliver a
			INNER JOIN 
			(SELECT 
				so.id AS order_id,
				so.order_no AS order_no,
				so.receive_status AS receive_status,
				so.invoice_status AS invoice_status,
				so.customer_ch_name AS customer_ch_name
			FROM so_order so
			WHERE so.deliver_status != '30' AND so.del_flag = '0' AND so.workflow_status = '50'
				AND NOT EXISTS (SELECT sot.order_no FROM so_order sot WHERE so.order_no = sot.order_no AND sot.del_flag = '2' AND sot.workflow_status != '50')
			) temp ON a.order_no = temp.order_no
		WHERE a.del_flag = '0'
		<if test="id != null and id != ''">
			AND a.id = #{id}
		</if>
		<if test="orderNo != null and orderNo != ''">
			AND a.order_no = #{orderNo} AND a.if_out = '0'
		</if>
		<if test="sqlMap != null and sqlMap.dataScope != null">
			AND a.create_by in ${sqlMap.dataScope}
		</if>
	</select>
    
	<select id="getSoAppDelWorkStatusByOrderNo" resultType="com.inbody.crm.sd.entity.SoApplyDeliver">
		SELECT 
			<include refid="soApplyDeliverColumns"/>
		FROM so_apply_deliver a
		WHERE a.order_no = #{orderNo} AND a.del_flag = '0' AND a.if_out = '0'
		ORDER BY a.create_date DESC limit 1
	</select>
	
	<select id="findList" resultType="com.inbody.crm.sd.entity.SoApplyDeliver">
		SELECT 
			<include refid="soApplyDeliverColumns"/>
		FROM so_apply_deliver a
		<include refid="soApplyDeliverJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.inbody.crm.sd.entity.SoApplyDeliver">
		SELECT 
			<include refid="soApplyDeliverColumns"/>
		FROM so_apply_deliver a
		<include refid="soApplyDeliverJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="getMaterialMarkByMaterialNo" resultType="java.lang.String">
	SELECT
		material_mark
	FROM sm_mat_info
	WHERE material_No = #{materialNo}
	</select>
	
	<insert id="insert">
		INSERT INTO so_apply_deliver(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			order_no,
			expect_date,
			workflow_status,
			if_out
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{orderNo},
			#{expectDate},
			#{workflowStatus},
			#{ifOut}
		)
	</insert>
	
	<update id="update">
		UPDATE so_apply_deliver SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			order_no = #{orderNo},
			expect_date = #{expectDate},
			workflow_status = #{workflowStatus},
			if_out = #{ifOut}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE so_apply_deliver SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>
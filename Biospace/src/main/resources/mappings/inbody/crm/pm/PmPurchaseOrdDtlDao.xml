<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.pm.dao.PmPurchaseOrdDtlDao">
    
	<sql id="pmPurchaseOrdDtlColumns">
		a.id AS "id",
		a.proc_ins_id AS "procInsId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.purchase_no AS "purchaseNo",
		a.line_no AS "lineNo",
		a.quotation_no AS "quotationNo",
		a.qut_line_no AS "qutLineNo",
		a.material_no AS "materialNo",
		a.num AS "num",
		a.if_foc AS "ifFoc",
		a.al_arrival_num AS "alArrivalNum",
		a.arrival_num AS "arrivalNum",
		a.unpay_num AS "unpayNum",
		a.unit_price AS "unitPrice",
		a.total_amount AS "totalAmount",
		a.unpay_amount AS "unpayAmount",
		a.warehouse AS "warehouse",
		a.entry_date AS "entryDate"
	</sql>

	<sql id="pmPurchaseOrdDtlJoins">
		LEFT JOIN pm_purchase_ord b ON b.purchase_no = a.purchase_no
	</sql>
	
	<!-- 通过id取得采购明细记录 -->
	<select id="get" resultType="PmPurchaseOrdDtl">
		SELECT 
			<include refid="pmPurchaseOrdDtlColumns"/>
		FROM pm_purchase_ord_dtl a
		<include refid="pmPurchaseOrdDtlJoins"/>
		WHERE a.id = #{id}
	</select>
    
    <!-- 通过采购订单号取得采购明细记录 -->
	<select id="getByPurchaseNo" resultType="PmPurchaseOrdDtl">
		SELECT 
			<include refid="pmPurchaseOrdDtlColumns"/>
		FROM pm_purchase_ord_dtl a
		<include refid="pmPurchaseOrdDtlJoins"/>
		WHERE a.purchase_no = #{purchaseNo}
	</select>
	
	<!-- 采购订单明细取得 -->
	<select id="findList" resultType="PmPurchaseOrdDtl">
		SELECT 
			<include refid="pmPurchaseOrdDtlColumns"/>,
			CONCAT(c.material_name, " ", c.model) AS "materialName"
		FROM pm_purchase_ord_dtl a
		INNER JOIN pm_purchase_ord b ON b.purchase_no = a.purchase_no
		LEFT JOIN sm_mat_info c ON c.material_no = a.material_no
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="purchaseNo != null and purchaseNo != ''">
				AND a.purchase_no = #{purchaseNo}
			</if>
			AND a.if_foc = '0'
		</where>
		ORDER BY a.line_no ASC
	</select>
	
	<!-- foc采购明细取得 -->
	<select id="findFocList" resultType="PmPurchaseOrdDtl">
		SELECT 
			<include refid="pmPurchaseOrdDtlColumns"/>,
			CONCAT(c.material_name, " ", c.model) AS "materialName",
			d.repair_no AS "repairNo"
		FROM pm_purchase_ord_dtl a
		INNER JOIN pm_purchase_ord b ON b.purchase_no = a.purchase_no
		LEFT JOIN sm_mat_info c ON c.material_no = a.material_no
		LEFT JOIN rm_quotation d ON d.quotation_no = a.quotation_no
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="purchaseNo != null and purchaseNo != ''">
				AND a.purchase_no = #{purchaseNo}
			</if>
			AND b.purchase_type = '2'
			AND a.if_foc = '1'
		</where>
		ORDER BY a.line_no ASC
	</select>

    <!-- 采购订单查询画面，采购订单list分页查询 -->
    <select id="findPageList" resultType="PmPurchaseOrdSearch">
        SELECT
            b.id AS "id",
            a.purchase_no AS "purchaseNo",
            b.purchase_type AS "purchaseType",
            a.if_foc AS "ifFoc",
            e.supplier_name AS "supplierName",
            IF(b.workflow_status='50', '50', IF(b.workflow_status='60', '', '10')) AS "purStatus",
            b.payment_status AS "paymentStatus",
            b.arrival_status AS "arrivalStatus",
            a.material_no AS "materialNo",
            CONCAT(c.material_name, " ", c.model) AS "materialName",
            a.unit_price AS "unitPrice",
            a.num AS "num",
            a.unpay_num AS "unpayNum",
            a.unpay_amount AS "unpayAmount",
            a.al_arrival_num AS "alArrivalNum",
            a.num - a.al_arrival_num AS "unArrivalNum",
            d.invoice_no AS "invoiceNo",
            b.ax_no AS "axNo"
        FROM pm_purchase_ord_dtl a
        INNER JOIN pm_purchase_ord b ON b.purchase_no = a.purchase_no
        LEFT JOIN sm_mat_info c ON c.material_no = a.material_no
        LEFT JOIN (SELECT purchase_no, group_concat(invoice_no) AS invoice_no 
                   FROM pm_pur_invoice
                   GROUP BY purchase_no) d ON d.purchase_no = a.purchase_no
        LEFT JOIN (SELECT t1.purchase_no, t2.supplier_name 
                   FROM pm_purchase_ord t1, cm_supplier_info t2
                   WHERE t1.supplier_id = t2.supplier_id) e ON e.purchase_no = a.purchase_no
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            AND b.del_flag = #{DEL_FLAG_NORMAL}
            <if test="purchaseNo != null and purchaseNo != ''">
                AND a.purchase_no LIKE CONCAT('%', #{purchaseNo}, '%')
            </if>
            <if test="supplierId != null and supplierId != ''">
                AND b.supplier_id = #{supplierId}
            </if>
            <if test="materialName != null and materialName != ''">
                AND CONCAT(c.material_name, " ", c.model) LIKE CONCAT('%', #{materialName}, '%')
            </if>
            <if test="purchaseType != null and purchaseType != ''">
                AND b.purchase_type = #{purchaseType}
            </if>
            <if test="paymentStatus != null and paymentStatus != ''">
                AND b.payment_status = #{paymentStatus}
            </if>
            <if test="arrivalStatus != null and arrivalStatus != ''">
                AND b.arrival_status = #{arrivalStatus}
            </if>
        </where>
        ORDER BY a.purchase_no DESC, a.if_foc ASC, a.line_no ASC
    </select>

	<select id="findAllList" resultType="PmPurchaseOrdDtl">
		SELECT 
			<include refid="pmPurchaseOrdDtlColumns"/>
		FROM pm_purchase_ord_dtl a
		<include refid="pmPurchaseOrdDtlJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<!-- 配件采购明细导出数据取得 -->
	<select id="findAccPurDtlExportList" resultType="PmPurchaseOrdDtl">
		SELECT 
			<include refid="pmPurchaseOrdDtlColumns"/>,
			CONCAT(c.material_name, " ", c.model) AS "materialName",
			c.model AS "model",
			d.repair_no AS "repairNo"
		FROM pm_purchase_ord_dtl a
		INNER JOIN pm_purchase_ord b ON b.purchase_no = a.purchase_no
		LEFT JOIN sm_mat_info c ON c.material_no = a.material_no
		LEFT JOIN rm_quotation d ON d.quotation_no = a.quotation_no
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="purchaseNo != null and purchaseNo != ''">
				AND a.purchase_no = #{purchaseNo}
			</if>
			AND b.purchase_type = '2'
		</where>
		ORDER BY a.material_no, a.create_date ASC
	</select>
	
	<!-- 采购订单入库明细取得 -->
	<select id="findStoragePurDtlList" resultType="PmPurchaseOrdDtl">
		SELECT
		    <include refid="pmPurchaseOrdDtlColumns"/>,
			CONCAT(c.material_name, " ", c.model) AS "materialName",
			c.if_sn AS "ifSn",
			c.if_virtual_sn AS "ifVirtualSn"
		FROM pm_purchase_ord_dtl a
		INNER JOIN pm_purchase_ord b ON b.purchase_no = a.purchase_no
		LEFT JOIN sm_mat_info c ON c.material_no = a.material_no
		<where>
		    a.purchase_no = #{purchaseNo}
		    AND a.del_flag = #{DEL_FLAG_NORMAL}
		    AND b.workflow_status = '50'
		</where>
		ORDER BY a.if_foc ASC, a.line_no ASC
	</select>
	
	<insert id="insert">
		INSERT INTO pm_purchase_ord_dtl(
			id,
			proc_ins_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			purchase_no,
			line_no,
			quotation_no,
			qut_line_no,
			material_no,
			num,
			if_foc,
			al_arrival_num,
			arrival_num,
			unpay_num,
			unit_price,
			total_amount,
			unpay_amount,
			warehouse,
			entry_date
		) VALUES (
			#{id},
			#{procInsId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{purchaseNo},
			#{lineNo},
			#{quotationNo},
			#{qutLineNo},
			#{materialNo},
			#{num},
			#{ifFoc},
			#{alArrivalNum},
			#{arrivalNum},
			#{unpayNum},
			#{unitPrice},
			#{totalAmount},
			#{unpayAmount},
			#{warehouse},
			#{entryDate}
		)
	</insert>
	
	<update id="update">
		UPDATE pm_purchase_ord_dtl SET 	
			proc_ins_id = #{procInsId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			purchase_no = #{purchaseNo},
			line_no = #{lineNo},
			quotation_no = #{quotationNo},
			qut_line_no = #{qutLineNo},
			material_no = #{materialNo},
			num = #{num},
			if_foc = #{ifFoc},
			al_arrival_num = #{alArrivalNum},
			arrival_num = #{arrivalNum},
			unpay_num = #{unpayNum},
			unit_price = #{unitPrice},
			total_amount = #{totalAmount},
			unpay_amount = #{unpayAmount},
			warehouse = #{warehouse},
			entry_date = #{entryDate}
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		DELETE FROM pm_purchase_ord_dtl
		WHERE id = #{id}
	</delete>
	
</mapper>
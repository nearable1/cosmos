<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inbody.crm.test.dao.TestTreeDao">
    
	<sql id="testTreeColumns">
		a.id AS "id",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.name AS "name",
		a.sort AS "sort",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="testTreeJoins">
	</sql>
    
	<select id="get" resultType="TestTree">
		SELECT 
			<include refid="testTreeColumns"/>
		FROM test_tree a
		<include refid="testTreeJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="findList" resultType="TestTree">
		SELECT 
			<include refid="testTreeColumns"/>
		FROM test_tree a
		<include refid="testTreeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="parent != null and parent.id != null and parent.id != ''">
				AND a.parent_id = #{parent.id}
			</if>
			<if test="parentIds != null and parentIds != ''">
				AND a.parent_ids LIKE 
					<if test="dbName == 'oracle'">'%'||#{parentIds}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{parentIds}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{parentIds},'%')</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findAllList" resultType="TestTree">
		SELECT 
			<include refid="testTreeColumns"/>
		FROM test_tree a
		<include refid="testTreeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		ORDER BY a.sort ASC
	</select>
	<select id="findById" resultType="TestTree">
		select 
		<include refid="testTreeColumns"/> 
		FROM test_tree a
		<where>
			a.id  = #{id}
		</where>
	</select>
	<select id="findByParentId" resultType="TestTree">
		SELECT a.id,
			a.parent_id AS "parent.id",
			a.parent_ids FROM test_tree a 
			<where>
				a.parent_id  = #{id}
			</where>
	</select>
	<select id="findNewest" resultType="TestTree">
		select top (1) 
		<include refid="testTreeColumns"/> 
		from test_tree a
		order by a.create_date desc
	</select>
	<select id="findByParentIdsLike" resultType="TestTree">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM test_tree a
		<include refid="testTreeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.parent_ids LIKE #{parentIds}
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<insert id="insert">
		INSERT INTO test_tree(
			id,
			parent_id,
			parent_ids,
			name,
			sort,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{parent.id},
			#{parentIds},
			#{name},
			#{sort},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE test_tree SET 	
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			name = #{name},
			sort = #{sort},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE test_tree SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="updateName">
		UPDATE test_tree SET 
			name = #{name}
		WHERE id = #{id}
	</update>
	<delete id="deleteOnce">
		delete test_tree where id = #{id} or parent_ids LIKE '%#{id}%'
	</delete>
	
	<update id="delete">
		UPDATE test_tree SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE '%,'||#{id}||',%'
	</update>
	
</mapper>